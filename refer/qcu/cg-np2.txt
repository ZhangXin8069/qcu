-- The C compiler identification is GNU 11.4.0
-- The CXX compiler identification is GNU 11.4.0
-- The CUDA compiler identification is NVIDIA 12.4.131
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc - skipped
-- Detecting CUDA compile features
-- Detecting CUDA compile features - done
-- Found MPI_C: /home/kfutfd/external-libraries/openmpi-4.1.5/lib/libmpi.so (found version "3.1") 
-- Found MPI_CXX: /home/kfutfd/external-libraries/openmpi-4.1.5/lib/libmpi.so (found version "3.1") 
-- Found MPI: TRUE (found version "3.1")  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/kfutfd/qcu/refer/qcu
[ 10%] Building CUDA object CMakeFiles/qcu.dir/src/comm/qcu_communicator.cu.o
[ 20%] Building CUDA object CMakeFiles/qcu.dir/src/qcd/qcu_dslash.cu.o
[ 40%] Building CUDA object CMakeFiles/qcu.dir/src/qcd/qcu_wilson_dslash.cu.o
[ 40%] Building CUDA object CMakeFiles/qcu.dir/src/qcu_storage/qcu_storage.cu.o
[ 50%] Building CUDA object CMakeFiles/qcu.dir/src/qcu.cu.o
[ 60%] Building CUDA object CMakeFiles/qcu.dir/src/algebra/qcu_algebra.cu.o
[ 70%] Building CUDA object CMakeFiles/qcu.dir/src/solver/qcu_cg.cu.o
/home/kfutfd/qcu/refer/qcu/src/solver/qcu_cg.cu(30): warning #177-D: variable "stream2" was declared but never referenced
    cudaStream_t stream2 = dslashParam->stream2;
                 ^

Remark: The warnings can be suppressed with "-diag-suppress <warning-number>"

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(128): warning #177-D: variable "Nx" was declared but never referenced
    int Nx = dslashParam_->Nx;
        ^

Remark: The warnings can be suppressed with "-diag-suppress <warning-number>"

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(129): warning #177-D: variable "Ny" was declared but never referenced
    int Ny = dslashParam_->Ny;
        ^

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(130): warning #177-D: variable "Nz" was declared but never referenced
    int Nz = dslashParam_->Nz;
        ^

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(131): warning #177-D: variable "Nt" was declared but never referenced
    int Nt = dslashParam_->Nt;
        ^

[ 80%] Linking CUDA shared library libqcu.so
[ 80%] Built target qcu
[ 90%] Building CUDA object CMakeFiles/test_linear_algebra.dir/src/tests/linear_algebra/test_kernels.cu.o
[100%] Linking CUDA executable tests/test_linear_algebra
[100%] Built target test_linear_algebra
rm: cannot remove '.': Is a directory
rm: cannot remove '..': Is a directory
rm: cannot remove '.cache': Is a directory
fatal: pathspec '"clangd.format.tabSize": 4' did not match any files
fatal: pathspec '.gitmodules' did not match any files
~/qcu/refer/qcu/test ~/qcu/refer/qcu
rm: cannot remove 'log_*': No such file or directory
==1141206== NVPROF is profiling process 1141206, command: python ./test.mpi.cg.qcu-np2.py
==1141205== NVPROF is profiling process 1141205, command: python ./test.mpi.cg.qcu-np2.py
==1141206== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==1141205== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
Disabling GPU-Direct RDMA access
Enabling peer-to-peer copy engine and direct load/store access
Intra-node (non peer-to-peer) enabled for rank   1 (gpu=1) with neighbor   0 (gpu=0) dir=0, dim=3
Intra-node (non peer-to-peer) enabled for rank   1 (gpu=1) with neighbor   0 (gpu=0) dir=1, dim=3
Intra-node (non peer-to-peer) enabled for rank   0 (gpu=0) with neighbor   1 (gpu=1) dir=0, dim=3
Intra-node (non peer-to-peer) enabled for rank   0 (gpu=0) with neighbor   1 (gpu=1) dir=1, dim=3
QUDA 1.1.0 (git 1.1.0--sm_60)
CUDA Driver version = 12020
CUDA Runtime version = 12040
Found device 0: Tesla P100-PCIE-16GB
Found device 1: Tesla P100-PCIE-16GB
Using device 0: Tesla P100-PCIE-16GB
WARNING: Data reordering done on GPU (set with QUDA_REORDER_LOCATION=GPU/CPU)
Loaded 59 sets of cached parameters from .cache/tunecache.tsv
Loaded 59 sets of cached parameters from .cache/tunecache.tsv
WARNING: Using device memory pool allocator
WARNING: Using pinned memory pool allocator
cublasCreated successfully
single latt size = [32, 32, 32, 32]
single latt size = [32, 32, 32, 32]
==1141205== Warning: Profiling results might be incorrect with current version of nvcc compiler used to compile cuda app. Compile with nvcc compiler 9.0 or later version to get correct profiling results. Ignore this warning if code is already compiled with the recommended nvcc version 
==1141206== Warning: Profiling results might be incorrect with current version of nvcc compiler used to compile cuda app. Compile with nvcc compiler 9.0 or later version to get correct profiling results. Ignore this warning if code is already compiled with the recommended nvcc version 
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 10.153301679994911 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 10.153301679994911 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 10.153568467998412 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 10.153568467998412 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.484671675993013 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.484671675993013 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.48370107600931 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.48370107600931 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.389127087008092 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.389127087008092 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.386854519994813 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.386854519994813 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.391878409995115 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.391878409995115 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.389301504998002 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.389301504998002 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.386009805995855 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.386009805995855 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.384991333005019 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.384991333005019 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.434060783998575 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.434060783998575 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.434350347000873 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.434350347000873 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.41447788401274 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.41447788401274 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.413464968005428 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.413464968005428 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.356900226994185 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.356900226994185 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.355168876994867 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.355168876994867 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.302287061000243 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.302287061000243 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.298424960012198 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.298424960012198 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.260587459997623 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.260587459997623 sec
============================
rank 0 my x and x difference: , 0.9974171443088226, takes 8.25955376199272 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.25955376199272 sec
============================
WARNING: Environment variable QUDA_PROFILE_OUTPUT_BASE not set; writing to profile.tsv and profile_async.tsv
Saving 17 sets of cached parameters to .cache/profile_0.tsv
Saving 0 sets of cached profiles to .cache/profile_async_0.tsv

               initQuda Total time =     1.083 secs
                     init     =     1.083 secs ( 99.999%),	 with        2 calls at 5.417e+05 us per call
        total accounted       =     1.083 secs ( 99.999%)
        total missing         =     0.000 secs (  0.001%)

          loadGaugeQuda Total time =     0.447 secs
                 download     =     0.289 secs ( 64.624%),	 with       20 calls at 1.446e+04 us per call
                   upload     =     0.047 secs ( 10.394%),	 with       10 calls at 4.650e+03 us per call
                     init     =     0.111 secs ( 24.879%),	 with       20 calls at 5.565e+03 us per call
                  compute     =     0.000 secs (  0.005%),	 with       20 calls at 1.150e+00 us per call
                     free     =     0.000 secs (  0.039%),	 with       20 calls at 8.800e+00 us per call
        total accounted       =     0.447 secs ( 99.942%)
        total missing         =     0.000 secs (  0.058%)

                endQuda Total time =     0.028 secs

       initQuda-endQuda Total time =    90.525 secs

                   QUDA Total time =     2.029 secs
                 download     =     0.289 secs ( 14.253%),	 with       20 calls at 1.446e+04 us per call
                   upload     =     0.047 secs (  2.292%),	 with       10 calls at 4.651e+03 us per call
                     init     =     1.195 secs ( 58.892%),	 with       22 calls at 5.431e+04 us per call
                  compute     =     0.470 secs ( 23.172%),	 with       30 calls at 1.567e+04 us per call
                     free     =     0.000 secs (  0.009%),	 with       20 calls at 8.750e+00 us per call
        total accounted       =     2.001 secs ( 98.618%)
        total missing         =     0.028 secs (  1.382%)

Device memory used = 1461.0 MiB
Pinned device memory used = 0.0 MiB
Managed memory used = 0.0 MiB
Shmem memory used = 0.0 MiB
Page-locked host memory used = 48.0 MiB
Total host memory used >= 66.0 MiB

==1141206== Generated result file: /home/kfutfd/qcu/refer/qcu/test/log_x99-Yang_1141206.nvvp
==1141205== Generated result file: /home/kfutfd/qcu/refer/qcu/test/log_x99-Yang_1141205.nvvp
~/qcu/refer/qcu

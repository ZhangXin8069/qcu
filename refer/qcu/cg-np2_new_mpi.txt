-- The C compiler identification is GNU 11.4.0
-- The CXX compiler identification is GNU 11.4.0
-- The CUDA compiler identification is NVIDIA 12.4.131
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc - skipped
-- Detecting CUDA compile features
-- Detecting CUDA compile features - done
-- Found MPI_C: /home/kfutfd/external-libraries/openmpi-4.1.5/lib/libmpi.so (found version "3.1") 
-- Found MPI_CXX: /home/kfutfd/external-libraries/openmpi-4.1.5/lib/libmpi.so (found version "3.1") 
-- Found MPI: TRUE (found version "3.1")  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/kfutfd/qcu/refer/qcu
[ 10%] Building CUDA object CMakeFiles/qcu.dir/src/comm/qcu_communicator.cu.o
[ 20%] Building CUDA object CMakeFiles/qcu.dir/src/qcd/qcu_dslash.cu.o
[ 30%] Building CUDA object CMakeFiles/qcu.dir/src/qcd/qcu_wilson_dslash.cu.o
[ 40%] Building CUDA object CMakeFiles/qcu.dir/src/qcu_storage/qcu_storage.cu.o
[ 50%] Building CUDA object CMakeFiles/qcu.dir/src/qcu.cu.o
[ 60%] Building CUDA object CMakeFiles/qcu.dir/src/algebra/qcu_algebra.cu.o
[ 70%] Building CUDA object CMakeFiles/qcu.dir/src/solver/qcu_cg.cu.o
/home/kfutfd/qcu/refer/qcu/src/solver/qcu_cg.cu(30): warning #177-D: variable "stream2" was declared but never referenced
    cudaStream_t stream2 = dslashParam->stream2;
                 ^

Remark: The warnings can be suppressed with "-diag-suppress <warning-number>"

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(128): warning #177-D: variable "Nx" was declared but never referenced
    int Nx = dslashParam_->Nx;
        ^

Remark: The warnings can be suppressed with "-diag-suppress <warning-number>"

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(129): warning #177-D: variable "Ny" was declared but never referenced
    int Ny = dslashParam_->Ny;
        ^

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(130): warning #177-D: variable "Nz" was declared but never referenced
    int Nz = dslashParam_->Nz;
        ^

/home/kfutfd/qcu/refer/qcu/src/qcd/qcu_wilson_dslash.cu(131): warning #177-D: variable "Nt" was declared but never referenced
    int Nt = dslashParam_->Nt;
        ^

[ 80%] Linking CUDA shared library libqcu.so
[ 80%] Built target qcu
[ 90%] Building CUDA object CMakeFiles/test_linear_algebra.dir/src/tests/linear_algebra/test_kernels.cu.o
[100%] Linking CUDA executable tests/test_linear_algebra
[100%] Built target test_linear_algebra
rm: cannot remove '.': Is a directory
rm: cannot remove '..': Is a directory
rm: cannot remove '.cache': Is a directory
fatal: pathspec '"clangd.format.tabSize": 4' did not match any files
fatal: pathspec '.gitmodules' did not match any files
~/qcu/refer/qcu/test ~/qcu/refer/qcu
==347733== NVPROF is profiling process 347733, command: python ./test.mpi.cg.qcu-np2.py
==347734== NVPROF is profiling process 347734, command: python ./test.mpi.cg.qcu-np2.py
==347733== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==347734== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
Disabling GPU-Direct RDMA access
Enabling peer-to-peer copy engine and direct load/store access
Intra-node (non peer-to-peer) enabled for rank   0 (gpu=0) with neighbor   1 (gpu=1) dir=0, dim=3
Intra-node (non peer-to-peer) enabled for rank   0 (gpu=0) with neighbor   1 (gpu=1) dir=1, dim=3
Intra-node (non peer-to-peer) enabled for rank   1 (gpu=1) with neighbor   0 (gpu=0) dir=0, dim=3
Intra-node (non peer-to-peer) enabled for rank   1 (gpu=1) with neighbor   0 (gpu=0) dir=1, dim=3
QUDA 1.1.0 (git 1.1.0--sm_60)
CUDA Driver version = 12020
CUDA Runtime version = 12040
Found device 0: Tesla P100-PCIE-16GB
Found device 1: Tesla P100-PCIE-16GB
Using device 0: Tesla P100-PCIE-16GB
WARNING: Data reordering done on GPU (set with QUDA_REORDER_LOCATION=GPU/CPU)
Loaded 59 sets of cached parameters from .cache/tunecache.tsv
Loaded 59 sets of cached parameters from .cache/tunecache.tsv
WARNING: Using device memory pool allocator
WARNING: Using pinned memory pool allocator
single latt size = [32, 32, 32, 32]
cublasCreated successfully
single latt size = [32, 32, 32, 32]
==347734== Warning: Profiling results might be incorrect with current version of nvcc compiler used to compile cuda app. Compile with nvcc compiler 9.0 or later version to get correct profiling results. Ignore this warning if code is already compiled with the recommended nvcc version 
==347733== Warning: Profiling results might be incorrect with current version of nvcc compiler used to compile cuda app. Compile with nvcc compiler 9.0 or later version to get correct profiling results. Ignore this warning if code is already compiled with the recommended nvcc version 
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 16.351014988002134 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 16.351014988002134 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 16.353010322003684 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 16.353010322003684 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.379968624001776 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.379968624001776 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.38158209300309 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.38158209300309 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.303184842996416 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.303184842996416 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.301920800004154 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.301920800004154 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.369675850997737 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.369675850997737 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.369715094995627 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.369715094995627 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.368691071002104 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.368691071002104 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.372999966006319 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.372999966006319 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.349926989998494 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.349926989998494 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.353911534002691 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.353911534002691 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.343201793002663 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.343201793002663 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
rank 0 my x and x difference: , 0.9974171443088226, takes 8.342875233000086 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.342875233000086 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.250047011002607 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.250047011002607 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.252719374999288 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.252719374999288 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.24877163900237 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.24877163900237 sec
============================
single latt size = [32, 32, 32, 32]
rank 0 my x and x difference: , 0.9974171443088226, takes 8.251516954005638 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.251516954005638 sec
============================
single latt size = [32, 32, 32, 32]
norm(p) = 5016.554993219949
norm(p) = 5016.554993219949
norm(p[0]) = 3547.240053901061
norm(p[0]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
norm(p[1]) = 3547.240053901061
Creating Gaussian distrbuted Lie group field with sigma = 1.000000e-01
===============qcu==================
CG inverter succeed in 207 iterations
CG inverter succeed in 207 iterations
rank 1 my x and x difference: , 0.9974179705782239, takes 8.222423175000586 sec, my_x_norm = 220410.95100951943
qcu rank 1 takes 8.222423175000586 sec
rank 0 my x and x difference: , 0.9974171443088226, takes 8.222852496000996 sec, my_x_norm = 220399.33683525564
qcu rank 0 takes 8.222852496000996 sec
============================
============================
WARNING: Environment variable QUDA_PROFILE_OUTPUT_BASE not set; writing to profile.tsv and profile_async.tsv
Saving 17 sets of cached parameters to .cache/profile_0.tsv
Saving 0 sets of cached profiles to .cache/profile_async_0.tsv

               initQuda Total time =     0.635 secs
                     init     =     0.635 secs ( 99.999%),	 with        2 calls at 3.177e+05 us per call
        total accounted       =     0.635 secs ( 99.999%)
        total missing         =     0.000 secs (  0.001%)

          loadGaugeQuda Total time =     0.397 secs
                 download     =     0.241 secs ( 60.646%),	 with       20 calls at 1.204e+04 us per call
                   upload     =     0.046 secs ( 11.558%),	 with       10 calls at 4.591e+03 us per call
                     init     =     0.110 secs ( 27.692%),	 with       20 calls at 5.499e+03 us per call
                  compute     =     0.000 secs (  0.003%),	 with       20 calls at 5.000e-01 us per call
                     free     =     0.000 secs (  0.036%),	 with       20 calls at 7.050e+00 us per call
        total accounted       =     0.397 secs ( 99.934%)
        total missing         =     0.000 secs (  0.066%)

                endQuda Total time =     0.032 secs

       initQuda-endQuda Total time =    94.703 secs

                   QUDA Total time =     1.785 secs
                 download     =     0.241 secs ( 13.498%),	 with       20 calls at 1.204e+04 us per call
                   upload     =     0.046 secs (  2.573%),	 with       10 calls at 4.591e+03 us per call
                     init     =     0.745 secs ( 41.766%),	 with       22 calls at 3.388e+04 us per call
                  compute     =     0.720 secs ( 40.344%),	 with       30 calls at 2.400e+04 us per call
                     free     =     0.000 secs (  0.008%),	 with       20 calls at 6.950e+00 us per call
        total accounted       =     1.752 secs ( 98.189%)
        total missing         =     0.032 secs (  1.811%)

Device memory used = 1461.0 MiB
Pinned device memory used = 0.0 MiB
Managed memory used = 0.0 MiB
Shmem memory used = 0.0 MiB
Page-locked host memory used = 48.0 MiB
Total host memory used >= 66.0 MiB

==347734== Generated result file: /home/kfutfd/qcu/refer/qcu/test/log_x99-Yang_347734.nvvp
==347733== Generated result file: /home/kfutfd/qcu/refer/qcu/test/log_x99-Yang_347733.nvvp
~/qcu/refer/qcu

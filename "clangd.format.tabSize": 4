{"displayTimeUnit":"ns","traceEvents":[{"pid":0,"ph":"M","name":"process_name","args":{"name":"clangd"}},{"pid":0,"ph":"M","name":"thread_name","tid":24192,"args":{"name":"clangd"}},{"pid":0,"ph":"i","name":"Log","ts":30.117000000000001,"tid":24192,"args":{"Message":"clangd version 16.0.2 (https://github.com/llvm/llvm-project 18ddebe1a1a9bde349441631365f0472e9693520)"}},{"pid":0,"ph":"i","name":"Log","ts":92.123999999999995,"tid":24192,"args":{"Message":"Features: linux+grpc"}},{"pid":0,"ph":"i","name":"Log","ts":102.60299999999999,"tid":24192,"args":{"Message":"PID: 24192"}},{"pid":0,"ph":"i","name":"Log","ts":113.604,"tid":24192,"args":{"Message":"Working directory: /home/zhangxin/qcu"}},{"pid":0,"ph":"i","name":"Log","ts":119.315,"tid":24192,"args":{"Message":"argv[0]: /home/zhangxin/.config/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/16.0.2/clangd_16.0.2/bin/clangd"}},{"pid":0,"ph":"i","name":"Log","ts":139.53299999999999,"tid":24192,"args":{"Message":"Starting LSP over stdin/stdout"}},{"pid":0,"ph":"i","name":"Log","ts":5748.5110000000004,"tid":24192,"args":{"Message":"<-- initialize(0)"}},{"pid":0,"ph":"i","name":"Log","ts":7262.9009999999998,"tid":24192,"args":{"Message":"--> reply:initialize(0) 1 ms"}},{"pid":0,"ph":"X","name":"initialize","ts":5507.2470000000003,"tid":24192,"dur":2034.8099999999995,"args":{"Params":{"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"positionEncodings":["utf-16"],"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]}},"notebookDocument":{"synchronization":{"dynamicRegistration":true,"executionSummarySupport":true}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true,"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode"]},"contextSupport":true,"dynamicRegistration":true,"editsNearCursor":true,"insertTextMode":2},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"foldingRange":{"collapsedText":false},"foldingRangeKind":{"valueSet":["comment","imports","region"]},"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"inlineValue":{"dynamicRegistration":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"augmentsSyntaxTokens":true,"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"serverCancelSupport":true,"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"typeHierarchy":{"dynamicRegistration":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"diagnostics":{"refreshSupport":true},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"inlayHint":{"refreshSupport":true},"inlineValue":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"resolveSupport":{"properties":["location.range"]},"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.82.1"},"initializationOptions":{"clangdFileStatus":true,"fallbackFlags":[]},"locale":"zh-cn","processId":24157,"rootPath":"/home/zhangxin/qcu","rootUri":"file:///home/zhangxin/qcu","trace":"off","workspaceFolders":[{"name":"qcu","uri":"file:///home/zhangxin/qcu"}]},"Reply":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"foldingRangeProvider":true,"hoverProvider":true,"implementationProvider":true,"inlayHintProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","definition","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","usedAsMutablePointer","constructorOrDestructor","userDefined","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","modifier","operator","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"standardTypeHierarchyProvider":true,"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 16.0.2 (https://github.com/llvm/llvm-project 18ddebe1a1a9bde349441631365f0472e9693520) linux+grpc x86_64-unknown-linux-gnu"}}}},{"pid":0,"ph":"i","name":"Log","ts":9500.1219999999994,"tid":24192,"args":{"Message":"<-- initialized"}},{"pid":0,"ph":"X","name":"initialized","ts":9488.9210000000003,"tid":24192,"dur":37,"args":{"Params":{}}},{"pid":0,"ph":"i","name":"Log","ts":21997.486000000001,"tid":24192,"args":{"Message":"<-- textDocument/didOpen"}},{"pid":0,"ph":"X","name":"AdjustCompileFlags","ts":22081.915000000001,"tid":24192,"dur":68.879999999997381,"args":{}},{"pid":0,"ph":"X","name":"Queued:Update","ts":22303.101999999999,"tid":24192,"dur":1.8630000000011933,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"M","name":"thread_name","tid":24202,"args":{"name":"ilson_dslash.cu"}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":21978.419999999998,"tid":24192,"id":0,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":22362.102999999999,"tid":24202,"bp":"e","id":0,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":22365.438999999998,"tid":24202,"dur":66.806000000000495,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"X","name":"getConfig","ts":22438.146000000001,"tid":24202,"dur":1.7029999999977008,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":22511.484,"tid":24202,"args":{"Message":"Failed to find compilation database for /home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"X","name":"AdjustCompileFlags","ts":22531.581999999999,"tid":24202,"dur":28.604000000002998,"args":{}},{"pid":0,"ph":"i","name":"Log","ts":22589.189999999999,"tid":24202,"args":{"Message":"ASTWorker building file /home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu version 1 with command clangd fallback\n[/home/zhangxin/qcu/src/cuda]\n/usr/bin/clang -resource-dir=/home/zhangxin/.config/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/16.0.2/clangd_16.0.2/lib/clang/16 -- /home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"M","name":"thread_name","tid":24203,"args":{"name":"ilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":24084.013999999999,"tid":24203,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":22351.883000000002,"tid":24202,"id":1,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":24157.942999999999,"tid":24203,"bp":"e","id":1,"cat":"mock_cat"},{"pid":0,"ph":"i","name":"Log","ts":40970.870000000003,"tid":24192,"args":{"Message":"<-- textDocument/documentLink(1)"}},{"pid":0,"ph":"i","name":"Log","ts":43439.125999999997,"tid":24192,"args":{"Message":"<-- textDocument/inlayHint(2)"}},{"pid":0,"ph":"i","name":"Log","ts":454657.81699999998,"tid":24192,"args":{"Message":"<-- textDocument/foldingRange(3)"}},{"pid":0,"ph":"M","name":"thread_name","tid":24302,"args":{"name":"FoldingRanges"}},{"pid":0,"ph":"X","name":"WaitForFreeSemaphoreSlot","ts":454841.18199999997,"tid":24302,"dur":12.063000000023749,"args":{}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":454644.22100000002,"tid":24192,"id":2,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":454903.22899999999,"tid":24302,"bp":"e","id":2,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":454864.21500000003,"tid":24302,"dur":46.697999999974854,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":463032.54999999999,"tid":24302,"args":{"Message":"--> reply:textDocument/foldingRange(3) 8 ms"}},{"pid":0,"ph":"X","name":"textDocument/foldingRange","ts":454644.22100000002,"tid":24192,"dur":154.26999999996042,"args":{"Params":{"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[{"endCharacter":63,"endLine":4,"kind":"region","startCharacter":41,"startLine":3},{"endLine":24,"kind":"region","startCharacter":66,"startLine":5},{"endCharacter":30,"endLine":22,"kind":"region","startCharacter":7,"startLine":21},{"endCharacter":73,"endLine":31,"kind":"region","startCharacter":21,"startLine":28},{"endLine":210,"kind":"region","startCharacter":76,"startLine":32},{"endCharacter":2,"endLine":128,"kind":"region","startCharacter":20,"startLine":84},{"endCharacter":4,"endLine":91,"kind":"region","startCharacter":5,"startLine":85},{"endCharacter":4,"endLine":105,"kind":"region","startCharacter":5,"startLine":93},{"endCharacter":6,"endLine":104,"kind":"region","startCharacter":38,"startLine":94},{"endCharacter":8,"endLine":99,"kind":"region","startCharacter":40,"startLine":97},{"endCharacter":4,"endLine":113,"kind":"region","startCharacter":5,"startLine":107},{"endCharacter":4,"endLine":127,"kind":"region","startCharacter":5,"startLine":115},{"endCharacter":6,"endLine":126,"kind":"region","startCharacter":38,"startLine":116},{"endCharacter":8,"endLine":121,"kind":"region","startCharacter":40,"startLine":119},{"endCharacter":2,"endLine":207,"kind":"region","startCharacter":10,"startLine":129},{"endCharacter":4,"endLine":163,"kind":"region","startCharacter":5,"startLine":130},{"endCharacter":6,"endLine":151,"kind":"region","startCharacter":36,"startLine":133},{"endCharacter":8,"endLine":150,"kind":"region","startCharacter":9,"startLine":138},{"endCharacter":10,"endLine":149,"kind":"region","startCharacter":42,"startLine":139},{"endCharacter":12,"endLine":144,"kind":"region","startCharacter":44,"startLine":142},{"endCharacter":6,"endLine":162,"kind":"region","startCharacter":14,"startLine":152},{"endCharacter":8,"endLine":161,"kind":"region","startCharacter":9,"startLine":155},{"endCharacter":10,"endLine":159,"kind":"region","startCharacter":42,"startLine":157},{"endCharacter":4,"endLine":206,"kind":"region","startCharacter":5,"startLine":165},{"endCharacter":6,"endLine":186,"kind":"region","startCharacter":35,"startLine":168},{"endCharacter":8,"endLine":185,"kind":"region","startCharacter":9,"startLine":173},{"endCharacter":10,"endLine":184,"kind":"region","startCharacter":42,"startLine":174},{"endCharacter":12,"endLine":179,"kind":"region","startCharacter":44,"startLine":177},{"endCharacter":6,"endLine":205,"kind":"region","startCharacter":14,"startLine":187},{"endCharacter":8,"endLine":204,"kind":"region","startCharacter":9,"startLine":192},{"endCharacter":10,"endLine":202,"kind":"region","startCharacter":42,"startLine":194},{"endCharacter":12,"endLine":199,"kind":"region","startCharacter":44,"startLine":197},{"endCharacter":46,"endLine":217,"kind":"region","startCharacter":21,"startLine":214},{"endLine":302,"kind":"region","startCharacter":49,"startLine":218},{"endCharacter":12,"endLine":240,"kind":"region","startCharacter":7,"startLine":239},{"endCharacter":30,"endLine":244,"kind":"region","startCharacter":7,"startLine":243},{"endCharacter":2,"endLine":301,"kind":"region","startCharacter":20,"startLine":259},{"endCharacter":4,"endLine":274,"kind":"region","startCharacter":5,"startLine":262},{"endCharacter":6,"endLine":273,"kind":"region","startCharacter":36,"startLine":265},{"endCharacter":8,"endLine":272,"kind":"region","startCharacter":40,"startLine":268},{"endCharacter":4,"endLine":298,"kind":"region","startCharacter":5,"startLine":276},{"endCharacter":6,"endLine":297,"kind":"region","startCharacter":35,"startLine":279},{"endCharacter":8,"endLine":296,"kind":"region","startCharacter":9,"startLine":284},{"endCharacter":10,"endLine":295,"kind":"region","startCharacter":42,"startLine":285},{"endCharacter":12,"endLine":290,"kind":"region","startCharacter":44,"startLine":288},{"endCharacter":73,"endLine":309,"kind":"region","startCharacter":21,"startLine":306},{"endLine":489,"kind":"region","startCharacter":76,"startLine":310},{"endCharacter":2,"endLine":406,"kind":"region","startCharacter":20,"startLine":361},{"endCharacter":4,"endLine":369,"kind":"region","startCharacter":5,"startLine":362},{"endCharacter":4,"endLine":383,"kind":"region","startCharacter":5,"startLine":371},{"endCharacter":6,"endLine":382,"kind":"region","startCharacter":38,"startLine":372},{"endCharacter":8,"endLine":377,"kind":"region","startCharacter":40,"startLine":375},{"endCharacter":4,"endLine":391,"kind":"region","startCharacter":5,"startLine":385},{"endCharacter":4,"endLine":405,"kind":"region","startCharacter":5,"startLine":393},{"endCharacter":6,"endLine":404,"kind":"region","startCharacter":38,"startLine":394},{"endCharacter":8,"endLine":399,"kind":"region","startCharacter":40,"startLine":397},{"endCharacter":2,"endLine":486,"kind":"region","startCharacter":10,"startLine":407},{"endCharacter":4,"endLine":442,"kind":"region","startCharacter":5,"startLine":408},{"endCharacter":6,"endLine":430,"kind":"region","startCharacter":23,"startLine":411},{"endCharacter":8,"endLine":429,"kind":"region","startCharacter":9,"startLine":417},{"endCharacter":10,"endLine":428,"kind":"region","startCharacter":42,"startLine":418},{"endCharacter":12,"endLine":423,"kind":"region","startCharacter":44,"startLine":421},{"endCharacter":6,"endLine":441,"kind":"region","startCharacter":14,"startLine":431},{"endCharacter":8,"endLine":440,"kind":"region","startCharacter":9,"startLine":434},{"endCharacter":10,"endLine":438,"kind":"region","startCharacter":42,"startLine":436},{"endCharacter":4,"endLine":485,"kind":"region","startCharacter":5,"startLine":444},{"endCharacter":6,"endLine":465,"kind":"region","startCharacter":22,"startLine":447},{"endCharacter":8,"endLine":464,"kind":"region","startCharacter":9,"startLine":452},{"endCharacter":10,"endLine":463,"kind":"region","startCharacter":42,"startLine":453},{"endCharacter":12,"endLine":458,"kind":"region","startCharacter":44,"startLine":456},{"endCharacter":6,"endLine":484,"kind":"region","startCharacter":14,"startLine":466},{"endCharacter":8,"endLine":483,"kind":"region","startCharacter":9,"startLine":471},{"endCharacter":10,"endLine":481,"kind":"region","startCharacter":42,"startLine":473},{"endCharacter":12,"endLine":478,"kind":"region","startCharacter":44,"startLine":476},{"endCharacter":46,"endLine":496,"kind":"region","startCharacter":21,"startLine":493},{"endLine":580,"kind":"region","startCharacter":49,"startLine":497},{"endCharacter":12,"endLine":518,"kind":"region","startCharacter":7,"startLine":517},{"endCharacter":30,"endLine":522,"kind":"region","startCharacter":7,"startLine":521},{"endCharacter":2,"endLine":579,"kind":"region","startCharacter":20,"startLine":537},{"endCharacter":4,"endLine":552,"kind":"region","startCharacter":5,"startLine":540},{"endCharacter":6,"endLine":551,"kind":"region","startCharacter":23,"startLine":543},{"endCharacter":8,"endLine":550,"kind":"region","startCharacter":40,"startLine":546},{"endCharacter":4,"endLine":576,"kind":"region","startCharacter":5,"startLine":554},{"endCharacter":6,"endLine":575,"kind":"region","startCharacter":22,"startLine":557},{"endCharacter":8,"endLine":574,"kind":"region","startCharacter":9,"startLine":562},{"endCharacter":10,"endLine":573,"kind":"region","startCharacter":42,"startLine":563},{"endCharacter":12,"endLine":568,"kind":"region","startCharacter":44,"startLine":566},{"endCharacter":73,"endLine":587,"kind":"region","startCharacter":21,"startLine":584},{"endLine":767,"kind":"region","startCharacter":76,"startLine":588},{"endCharacter":2,"endLine":684,"kind":"region","startCharacter":20,"startLine":639},{"endCharacter":4,"endLine":647,"kind":"region","startCharacter":5,"startLine":640},{"endCharacter":4,"endLine":661,"kind":"region","startCharacter":5,"startLine":649},{"endCharacter":6,"endLine":660,"kind":"region","startCharacter":38,"startLine":650},{"endCharacter":8,"endLine":655,"kind":"region","startCharacter":40,"startLine":653},{"endCharacter":4,"endLine":669,"kind":"region","startCharacter":5,"startLine":663},{"endCharacter":4,"endLine":683,"kind":"region","startCharacter":5,"startLine":671},{"endCharacter":6,"endLine":682,"kind":"region","startCharacter":38,"startLine":672},{"endCharacter":8,"endLine":677,"kind":"region","startCharacter":40,"startLine":675},{"endCharacter":2,"endLine":764,"kind":"region","startCharacter":10,"startLine":685},{"endCharacter":4,"endLine":720,"kind":"region","startCharacter":5,"startLine":686},{"endCharacter":6,"endLine":708,"kind":"region","startCharacter":23,"startLine":689},{"endCharacter":8,"endLine":707,"kind":"region","startCharacter":9,"startLine":695},{"endCharacter":10,"endLine":706,"kind":"region","startCharacter":42,"startLine":696},{"endCharacter":12,"endLine":701,"kind":"region","startCharacter":44,"startLine":699},{"endCharacter":6,"endLine":719,"kind":"region","startCharacter":14,"startLine":709},{"endCharacter":8,"endLine":718,"kind":"region","startCharacter":9,"startLine":712},{"endCharacter":10,"endLine":716,"kind":"region","startCharacter":42,"startLine":714},{"endCharacter":4,"endLine":763,"kind":"region","startCharacter":5,"startLine":722},{"endCharacter":6,"endLine":743,"kind":"region","startCharacter":22,"startLine":725},{"endCharacter":8,"endLine":742,"kind":"region","startCharacter":9,"startLine":730},{"endCharacter":10,"endLine":741,"kind":"region","startCharacter":42,"startLine":731},{"endCharacter":12,"endLine":736,"kind":"region","startCharacter":44,"startLine":734},{"endCharacter":6,"endLine":762,"kind":"region","startCharacter":14,"startLine":744},{"endCharacter":8,"endLine":761,"kind":"region","startCharacter":9,"startLine":749},{"endCharacter":10,"endLine":759,"kind":"region","startCharacter":42,"startLine":751},{"endCharacter":12,"endLine":756,"kind":"region","startCharacter":44,"startLine":754},{"endCharacter":46,"endLine":774,"kind":"region","startCharacter":21,"startLine":771},{"endLine":858,"kind":"region","startCharacter":49,"startLine":775},{"endCharacter":12,"endLine":796,"kind":"region","startCharacter":7,"startLine":795},{"endCharacter":30,"endLine":800,"kind":"region","startCharacter":7,"startLine":799},{"endCharacter":2,"endLine":857,"kind":"region","startCharacter":20,"startLine":815},{"endCharacter":4,"endLine":830,"kind":"region","startCharacter":5,"startLine":818},{"endCharacter":6,"endLine":829,"kind":"region","startCharacter":23,"startLine":821},{"endCharacter":8,"endLine":828,"kind":"region","startCharacter":40,"startLine":824},{"endCharacter":4,"endLine":854,"kind":"region","startCharacter":5,"startLine":832},{"endCharacter":6,"endLine":853,"kind":"region","startCharacter":22,"startLine":835},{"endCharacter":8,"endLine":852,"kind":"region","startCharacter":9,"startLine":840},{"endCharacter":10,"endLine":851,"kind":"region","startCharacter":42,"startLine":841},{"endCharacter":12,"endLine":846,"kind":"region","startCharacter":44,"startLine":844},{"endCharacter":73,"endLine":865,"kind":"region","startCharacter":21,"startLine":862},{"endLine":1045,"kind":"region","startCharacter":76,"startLine":866},{"endCharacter":2,"endLine":962,"kind":"region","startCharacter":20,"startLine":917},{"endCharacter":4,"endLine":925,"kind":"region","startCharacter":5,"startLine":918},{"endCharacter":4,"endLine":939,"kind":"region","startCharacter":5,"startLine":927},{"endCharacter":6,"endLine":938,"kind":"region","startCharacter":38,"startLine":928},{"endCharacter":8,"endLine":933,"kind":"region","startCharacter":40,"startLine":931},{"endCharacter":4,"endLine":947,"kind":"region","startCharacter":5,"startLine":941},{"endCharacter":4,"endLine":961,"kind":"region","startCharacter":5,"startLine":949},{"endCharacter":6,"endLine":960,"kind":"region","startCharacter":38,"startLine":950},{"endCharacter":8,"endLine":955,"kind":"region","startCharacter":40,"startLine":953},{"endCharacter":2,"endLine":1042,"kind":"region","startCharacter":10,"startLine":963},{"endCharacter":4,"endLine":998,"kind":"region","startCharacter":5,"startLine":964},{"endCharacter":6,"endLine":986,"kind":"region","startCharacter":23,"startLine":967},{"endCharacter":8,"endLine":985,"kind":"region","startCharacter":9,"startLine":973},{"endCharacter":10,"endLine":984,"kind":"region","startCharacter":42,"startLine":974},{"endCharacter":12,"endLine":979,"kind":"region","startCharacter":44,"startLine":977},{"endCharacter":6,"endLine":997,"kind":"region","startCharacter":14,"startLine":987},{"endCharacter":8,"endLine":996,"kind":"region","startCharacter":9,"startLine":990},{"endCharacter":10,"endLine":994,"kind":"region","startCharacter":42,"startLine":992},{"endCharacter":4,"endLine":1041,"kind":"region","startCharacter":5,"startLine":1000},{"endCharacter":6,"endLine":1021,"kind":"region","startCharacter":22,"startLine":1003},{"endCharacter":8,"endLine":1020,"kind":"region","startCharacter":9,"startLine":1008},{"endCharacter":10,"endLine":1019,"kind":"region","startCharacter":42,"startLine":1009},{"endCharacter":12,"endLine":1014,"kind":"region","startCharacter":44,"startLine":1012},{"endCharacter":6,"endLine":1040,"kind":"region","startCharacter":14,"startLine":1022},{"endCharacter":8,"endLine":1039,"kind":"region","startCharacter":9,"startLine":1027},{"endCharacter":10,"endLine":1037,"kind":"region","startCharacter":42,"startLine":1029},{"endCharacter":12,"endLine":1034,"kind":"region","startCharacter":44,"startLine":1032},{"endCharacter":46,"endLine":1052,"kind":"region","startCharacter":21,"startLine":1049},{"endLine":1136,"kind":"region","startCharacter":49,"startLine":1053},{"endCharacter":12,"endLine":1074,"kind":"region","startCharacter":7,"startLine":1073},{"endCharacter":30,"endLine":1078,"kind":"region","startCharacter":7,"startLine":1077},{"endCharacter":2,"endLine":1135,"kind":"region","startCharacter":20,"startLine":1093},{"endCharacter":4,"endLine":1108,"kind":"region","startCharacter":5,"startLine":1096},{"endCharacter":6,"endLine":1107,"kind":"region","startCharacter":23,"startLine":1099},{"endCharacter":8,"endLine":1106,"kind":"region","startCharacter":40,"startLine":1102},{"endCharacter":4,"endLine":1132,"kind":"region","startCharacter":5,"startLine":1110},{"endCharacter":6,"endLine":1131,"kind":"region","startCharacter":22,"startLine":1113},{"endCharacter":8,"endLine":1130,"kind":"region","startCharacter":9,"startLine":1118},{"endCharacter":10,"endLine":1129,"kind":"region","startCharacter":42,"startLine":1119},{"endCharacter":12,"endLine":1124,"kind":"region","startCharacter":44,"startLine":1122}]}},{"pid":0,"ph":"M","name":"thread_name","tid":24303,"args":{"name":"IndexStdlib"}},{"pid":0,"ph":"i","name":"Log","ts":466747.36300000001,"tid":24303,"args":{"Message":"Indexing c++14 standard library in the context of /home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":550802.451,"tid":24192,"args":{"Message":"<-- textDocument/semanticTokens/full(4)"}},{"pid":0,"ph":"i","name":"Log","ts":559976.50899999996,"tid":24192,"args":{"Message":"<-- $/setTrace"}},{"pid":0,"ph":"i","name":"Log","ts":560012.34600000002,"tid":24192,"args":{"Message":"unhandled notification $/setTrace"}},{"pid":0,"ph":"X","name":"$/setTrace","ts":559962.74300000002,"tid":24192,"dur":55.525000000023283,"args":{"Params":{"value":"off"}}},{"pid":0,"ph":"X","name":"Running PreambleCallback","ts":466218.63799999998,"tid":24203,"dur":136748.44199999998,"args":{}},{"pid":0,"ph":"i","name":"Log","ts":611464.83600000001,"tid":24203,"args":{"Message":"Built preamble of size 5879112 for file /home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu version 1 in 0.59 seconds"}},{"pid":0,"ph":"X","name":"BuildPreamble","ts":24149.257000000001,"tid":24203,"dur":587630.48100000003,"args":{"File":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":611813.69200000004,"tid":24203,"args":{"Message":"--> workspace/semanticTokens/refresh(0)"}},{"pid":0,"ph":"i","name":"Log","ts":611873.69499999995,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"X","name":"getConfig","ts":611944.87899999996,"tid":24202,"dur":7.4139999999897555,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"X","name":"CreatePreamblePatch","ts":611992.83999999997,"tid":24202,"dur":2102.76800000004,"args":{"File":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"X","name":"ClangTidyOpts","ts":614174.37600000005,"tid":24202,"dur":76.875,"args":{}},{"pid":0,"ph":"X","name":"ClangTidyInit","ts":616479.42500000005,"tid":24202,"dur":863.13399999996182,"args":{}},{"pid":0,"ph":"X","name":"MemIndex fuzzyFind","ts":619098.875,"tid":24202,"dur":7.7950000000419095,"args":{"results":0}},{"pid":0,"ph":"X","name":"Dex fuzzyFind","ts":619122.89099999995,"tid":24202,"dur":26.209000000031665,"args":{"query":"(LIMIT 10000 (& T=lob T=bal T=glo T=oba S= ?=Restricted For Code Completion))"}},{"pid":0,"ph":"X","name":"MergedIndex fuzzyFind","ts":619090.299,"tid":24202,"dur":63.489999999990687,"args":{"dynamic":0,"merged":0,"static":0,"static_dropped":0}},{"pid":0,"ph":"X","name":"MemIndex fuzzyFind","ts":619159.11899999995,"tid":24202,"dur":0.92100000008940697,"args":{"results":0}},{"pid":0,"ph":"X","name":"ProjectAwareIndex::fuzzyFind","ts":619163.00600000005,"tid":24202,"dur":1.0719999999273568,"args":{}},{"pid":0,"ph":"X","name":"MergedIndex fuzzyFind","ts":619158.34699999995,"tid":24202,"dur":7.9949999999953434,"args":{"dynamic":0,"merged":0,"static":0,"static_dropped":0}},{"pid":0,"ph":"X","name":"MergedIndex fuzzyFind","ts":619086.88300000003,"tid":24202,"dur":82.815999999991618,"args":{"dynamic":0,"merged":0,"static":0,"static_dropped":0}},{"pid":0,"ph":"X","name":"MemIndex fuzzyFind","ts":621495.12600000005,"tid":24202,"dur":5.4799999999813735,"args":{"results":0}},{"pid":0,"ph":"X","name":"Dex fuzzyFind","ts":621518.81999999995,"tid":24202,"dur":22.934000000008382,"args":{"query":"(LIMIT 10000 (& T=idx T=did T=adi T=hre T=thr T=ead T=rea S= ?=Restricted For Code Completion))"}},{"pid":0,"ph":"X","name":"MergedIndex fuzzyFind","ts":621490.82799999998,"tid":24202,"dur":54.962999999988824,"args":{"dynamic":0,"merged":0,"static":0,"static_dropped":0}},{"pid":0,"ph":"X","name":"MemIndex fuzzyFind","ts":621552.23300000001,"tid":24202,"dur":0.93200000002980232,"args":{"results":0}},{"pid":0,"ph":"X","name":"ProjectAwareIndex::fuzzyFind","ts":621555.95999999996,"tid":24202,"dur":0.90200000000186265,"args":{}},{"pid":0,"ph":"X","name":"MergedIndex fuzzyFind","ts":621551.30200000003,"tid":24202,"dur":7.7539999999571592,"args":{"dynamic":0,"merged":0,"static":0,"static_dropped":0}},{"pid":0,"ph":"X","name":"MergedIndex fuzzyFind","ts":621486.56000000006,"tid":24202,"dur":75.461999999941327,"args":{"dynamic":0,"merged":0,"static":0,"static_dropped":0}},{"pid":0,"ph":"i","name":"Log","ts":649709.69400000002,"tid":24192,"args":{"Message":"<-- reply(0)"}},{"pid":0,"ph":"X","name":"ClangTidyMatch","ts":649706.19799999997,"tid":24202,"dur":14728.543000000063,"args":{}},{"pid":0,"ph":"X","name":"BuildAST","ts":611968.41399999999,"tid":24202,"dur":52699.687000000034,"args":{"File":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":669276.60499999998,"tid":24202,"args":{"Message":"--> textDocument/publishDiagnostics"}},{"pid":0,"ph":"X","name":"ASTSignals::derive","ts":669635.81099999999,"tid":24202,"dur":4562.969000000041,"args":{}},{"pid":0,"ph":"X","name":"Running main AST callback","ts":664701.29299999995,"tid":24202,"dur":9530.8699999999953,"args":{}},{"pid":0,"ph":"X","name":"Build AST","ts":611942.18400000001,"tid":24202,"dur":62302.251999999979,"args":{}},{"pid":0,"ph":"X","name":"Update","ts":22351.883000000002,"tid":24202,"dur":589465.005,"args":{}},{"pid":0,"ph":"X","name":"textDocument/didOpen","ts":21978.419999999998,"tid":24192,"dur":339.35900000000038,"args":{"Params":{"textDocument":{"languageId":"cuda-cpp","text":"#pragma optimize(5)\n#include \"../../include/qcu_cuda.h\"\n\n__global__ void wilson_dslash_clear_dest(void *device_dest, int device_lat_x,\n                                         const int device_lat_y,\n                                         const int device_lat_z) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) +\n       t * lat_z * lat_y * lat_x * 12 + z * lat_y * lat_x * 12 +\n       y * lat_x * 12 + x * 12);\n  give_value(origin_dest, zero, 12);\n}\n\n__global__ void\nwilson_dslash_x_send(void *device_U, void *device_src, void *device_dest,\n                     int device_lat_x, const int device_lat_y,\n                     const int device_lat_z, const int device_lat_t,\n                     const int device_parity, const int device_grid_x,\n                     void *device_b_x_send_vec, void *device_f_x_send_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int lat_xcc = lat_x * 9;\n  const int lat_yxcc = lat_y * lat_xcc;\n  const int lat_zyxcc = lat_z * lat_yxcc;\n  const int lat_tzyxcc = lat_t * lat_zyxcc;\n  const int lat_xsc = lat_x * 12;\n  const int lat_yxsc = lat_y * lat_xsc;\n  const int lat_zyxsc = lat_z * lat_yxsc;\n  const int grid_x = device_grid_x;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  const int eo = (y + z + t) & 0x01; // (y+z+t)%2\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) + t * lat_zyxcc +\n       z * lat_yxcc + y * lat_xcc + x * 9);\n  register LatticeComplex *origin_src =\n      ((static_cast<LatticeComplex *>(device_src)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_b_x_send_vec =\n      ((static_cast<LatticeComplex *>(device_b_x_send_vec)) +\n       (t * lat_z * lat_y + z * lat_y + y) * 6);\n  register LatticeComplex *origin_f_x_send_vec =\n      ((static_cast<LatticeComplex *>(device_f_x_send_vec)) +\n       (t * lat_z * lat_y + z * lat_y + y) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex *tmp_src;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex src[12];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_x_send_vec[6];\n  register LatticeComplex f_x_send_vec[6];\n  give_value(dest, zero, 12);\n  if (grid_x == 1) {\n    {\n      // x-1\n      move_backward_x(move, x, lat_x, eo, parity);\n      tmp_U = (origin_U + move * 9 + (1 - parity) * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * 12);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] + src[c1 + 9] * I) * U[c1 * 3 + c0].conj();\n          tmp1 += (src[c1 + 3] + src[c1 + 6] * I) * U[c1 * 3 + c0].conj();\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] -= tmp1 * I;\n        dest[c0 + 9] -= tmp0 * I;\n      }\n    }\n    {\n      // x+1\n      move_forward_x(move, x, lat_x, eo, parity);\n      tmp_U = (origin_U + parity * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * 12);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] - src[c1 + 9] * I) * U[c0 * 3 + c1];\n          tmp1 += (src[c1 + 3] - src[c1 + 6] * I) * U[c0 * 3 + c1];\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] += tmp1 * I;\n        dest[c0 + 9] += tmp0 * I;\n      }\n    }\n  } else {\n    {\n      // x-1\n      move_backward_x(move, x, lat_x, eo, parity);\n      if (move == 0 || move == -1) {\n        tmp_U = (origin_U + move * 9 + (1 - parity) * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * 12);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 9] * I) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] + src[c1 + 6] * I) * U[c1 * 3 + c0].conj();\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] -= tmp1 * I;\n            dest[c0 + 9] -= tmp0 * I;\n          }\n        }\n      } else {\n        // send in x+1 way\n        give_ptr(src, origin_src, 12);\n        {\n          // sigma src\n          for (int c1 = 0; c1 < 3; c1++) {\n            b_x_send_vec[c1] = src[c1] - src[c1 + 9] * I;\n            b_x_send_vec[c1 + 3] = src[c1 + 3] - src[c1 + 6] * I;\n          }\n          give_ptr(origin_b_x_send_vec, b_x_send_vec, 6);\n        }\n      }\n    }\n    {\n      // x+1\n      move_forward_x(move, x, lat_x, eo, parity);\n      if (move == 0 || move == 1) {\n        tmp_U = (origin_U + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * 12);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] - src[c1 + 9] * I) * U[c0 * 3 + c1];\n              tmp1 += (src[c1 + 3] - src[c1 + 6] * I) * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] += tmp1 * I;\n            dest[c0 + 9] += tmp0 * I;\n          }\n        }\n      } else {\n        // send in x-1 way\n        tmp_U = (origin_U + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        give_ptr(src, origin_src, 12);\n        {\n          // just tmp\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 9] * I) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] + src[c1 + 6] * I) * U[c1 * 3 + c0].conj();\n            }\n            f_x_send_vec[c0] = tmp0;\n            f_x_send_vec[c0 + 3] = tmp1;\n          }\n          give_ptr(origin_f_x_send_vec, f_x_send_vec, 6);\n        }\n      }\n    }\n  }\n  // just add\n  add_ptr(origin_dest, dest, 12);\n}\n\n__global__ void\nwilson_dslash_x_recv(void *device_U, void *device_dest, int device_lat_x,\n                     const int device_lat_y, const int device_lat_z,\n                     const int device_lat_t, const int device_parity,\n                     const int device_grid_x, void *device_b_x_recv_vec,\n                     void *device_f_x_recv_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int grid_x = device_grid_x;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  const int eo = (y + z + t) & 0x01; // (y+z+t)%2\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) +\n       t * lat_z * lat_y * lat_x * 9 + z * lat_y * lat_x * 9 + y * lat_x * 9 +\n       x * 9);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) +\n       t * lat_z * lat_y * lat_x * 12 + z * lat_y * lat_x * 12 +\n       y * lat_x * 12 + x * 12);\n  register LatticeComplex *origin_b_x_recv_vec =\n      ((static_cast<LatticeComplex *>(device_b_x_recv_vec)) +\n       (t * lat_z * lat_y + z * lat_y + y) * 6);\n  register LatticeComplex *origin_f_x_recv_vec =\n      ((static_cast<LatticeComplex *>(device_f_x_recv_vec)) +\n       (t * lat_z * lat_y + z * lat_y + y) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_x_recv_vec[6];\n  register LatticeComplex f_x_recv_vec[6];\n  if (grid_x != 1) {\n    // needed\n    give_value(dest, zero, 12);\n    {\n      // x-1\n      move_backward_x(move, x, lat_x, eo, parity);\n      if (move != 0 && move != -1) {\n        // recv in x-1 way\n        give_ptr(b_x_recv_vec, origin_b_x_recv_vec, 6);\n        for (int c0 = 0; c0 < 3; c0++) {\n          dest[c0] += b_x_recv_vec[c0];\n          dest[c0 + 3] += b_x_recv_vec[c0 + 3];\n          dest[c0 + 6] -= b_x_recv_vec[c0 + 3] * I;\n          dest[c0 + 9] -= b_x_recv_vec[c0] * I;\n        }\n      }\n    }\n    {\n      // x+1\n      move_forward_x(move, x, lat_x, eo, parity);\n      if (move != 0 && move != 1) {\n        // recv in x+1 way\n        give_ptr(f_x_recv_vec, origin_f_x_recv_vec, 6);\n        tmp_U = (origin_U + parity * lat_t * lat_z * lat_y * lat_x * 9);\n        give_u(U, tmp_U);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += f_x_recv_vec[c1] * U[c0 * 3 + c1];\n              tmp1 += f_x_recv_vec[c1 + 3] * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] += tmp1 * I;\n            dest[c0 + 9] += tmp0 * I;\n          }\n        }\n      }\n    }\n    // just add\n    add_ptr(origin_dest, dest, 12);\n  }\n}\n\n__global__ void\nwilson_dslash_y_send(void *device_U, void *device_src, void *device_dest,\n                     int device_lat_x, const int device_lat_y,\n                     const int device_lat_z, const int device_lat_t,\n                     const int device_parity, const int device_grid_y,\n                     void *device_b_y_send_vec, void *device_f_y_send_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int lat_xcc = lat_x * 9;\n  const int lat_yxcc = lat_y * lat_xcc;\n  const int lat_zyxcc = lat_z * lat_yxcc;\n  const int lat_tzyxcc = lat_t * lat_zyxcc;\n  const int lat_xsc = lat_x * 12;\n  const int lat_yxsc = lat_y * lat_xsc;\n  const int lat_zyxsc = lat_z * lat_yxsc;\n  const int grid_y = device_grid_y;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) + t * lat_zyxcc +\n       z * lat_yxcc + y * lat_xcc + x * 9);\n  register LatticeComplex *origin_src =\n      ((static_cast<LatticeComplex *>(device_src)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_b_y_send_vec =\n      ((static_cast<LatticeComplex *>(device_b_y_send_vec)) +\n       (t * lat_z * lat_x + z * lat_x + x) * 6);\n  register LatticeComplex *origin_f_y_send_vec =\n      ((static_cast<LatticeComplex *>(device_f_y_send_vec)) +\n       (t * lat_z * lat_x + z * lat_x + x) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex *tmp_src;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex src[12];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_y_send_vec[6];\n  register LatticeComplex f_y_send_vec[6];\n  give_value(dest, zero, 12);\n  if (grid_y == 1) {\n    {\n      // y-1\n      move_backward(move, y, lat_y);\n      tmp_U = (origin_U + move * lat_xcc + lat_tzyxcc * 2 +\n               (1 - parity) * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * lat_xsc);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] - src[c1 + 9]) * U[c1 * 3 + c0].conj();\n          tmp1 += (src[c1 + 3] + src[c1 + 6]) * U[c1 * 3 + c0].conj();\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] += tmp1;\n        dest[c0 + 9] -= tmp0;\n      }\n    }\n    {\n      // y+1\n      move_forward(move, y, lat_y);\n      tmp_U = (origin_U + lat_tzyxcc * 2 + parity * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * lat_xsc);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] + src[c1 + 9]) * U[c0 * 3 + c1];\n          tmp1 += (src[c1 + 3] - src[c1 + 6]) * U[c0 * 3 + c1];\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] -= tmp1;\n        dest[c0 + 9] += tmp0;\n      }\n    }\n  } else {\n    {\n      // y-1\n      move_backward(move, y, lat_y);\n      if (move == -1) {\n        tmp_U = (origin_U + move * lat_xcc + lat_tzyxcc * 2 +\n                 (1 - parity) * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * lat_xsc);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] - src[c1 + 9]) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] + src[c1 + 6]) * U[c1 * 3 + c0].conj();\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] += tmp1;\n            dest[c0 + 9] -= tmp0;\n          }\n        }\n      } else {\n        // send in y+1 way\n        give_ptr(src, origin_src, 12);\n        {\n          // sigma src\n          for (int c1 = 0; c1 < 3; c1++) {\n            b_y_send_vec[c1] = src[c1] + src[c1 + 9];\n            b_y_send_vec[c1 + 3] = src[c1 + 3] - src[c1 + 6];\n          }\n          give_ptr(origin_b_y_send_vec, b_y_send_vec, 6);\n        }\n      }\n    }\n    {\n      // y+1\n      move_forward(move, y, lat_y);\n      if (move == 1) {\n        tmp_U = (origin_U + lat_tzyxcc * 2 + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * lat_xsc);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 9]) * U[c0 * 3 + c1];\n              tmp1 += (src[c1 + 3] - src[c1 + 6]) * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] -= tmp1;\n            dest[c0 + 9] += tmp0;\n          }\n        }\n      } else {\n        // send in y-1 way\n        tmp_U = (origin_U + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        give_ptr(src, origin_src, 12);\n        {\n          // just tmp\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] - src[c1 + 9]) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] + src[c1 + 6]) * U[c1 * 3 + c0].conj();\n            }\n            f_y_send_vec[c0] = tmp0;\n            f_y_send_vec[c0 + 3] = tmp1;\n          }\n          give_ptr(origin_f_y_send_vec, f_y_send_vec, 6);\n        }\n      }\n    }\n  }\n  // just add\n  add_ptr(origin_dest, dest, 12);\n}\n\n__global__ void\nwilson_dslash_y_recv(void *device_U, void *device_dest, int device_lat_x,\n                     const int device_lat_y, const int device_lat_z,\n                     const int device_lat_t, const int device_parity,\n                     const int device_grid_y, void *device_b_y_recv_vec,\n                     void *device_f_y_recv_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int grid_y = device_grid_y;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) +\n       t * lat_z * lat_y * lat_x * 9 + z * lat_y * lat_x * 9 + y * lat_x * 9 +\n       x * 9);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) +\n       t * lat_z * lat_y * lat_x * 12 + z * lat_y * lat_x * 12 +\n       y * lat_x * 12 + x * 12);\n  register LatticeComplex *origin_b_y_recv_vec =\n      ((static_cast<LatticeComplex *>(device_b_y_recv_vec)) +\n       (t * lat_z * lat_x + z * lat_x + x) * 6);\n  register LatticeComplex *origin_f_y_recv_vec =\n      ((static_cast<LatticeComplex *>(device_f_y_recv_vec)) +\n       (t * lat_z * lat_x + z * lat_x + x) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_y_recv_vec[6];\n  register LatticeComplex f_y_recv_vec[6];\n  if (grid_y != 1) {\n    // needed\n    give_value(dest, zero, 12);\n    {\n      // y-1\n      move_backward(move, y, lat_y);\n      if (move != -1) {\n        // recv in y-1 way\n        give_ptr(b_y_recv_vec, origin_b_y_recv_vec, 6);\n        for (int c0 = 0; c0 < 3; c0++) {\n          dest[c0] += b_y_recv_vec[c0];\n          dest[c0 + 3] += b_y_recv_vec[c0 + 3];\n          dest[c0 + 6] += b_y_recv_vec[c0 + 3];\n          dest[c0 + 9] -= b_y_recv_vec[c0];\n        }\n      }\n    }\n    {\n      // y+1\n      move_forward(move, y, lat_y);\n      if (move != 1) {\n        // recv in y+1 way\n        give_ptr(f_y_recv_vec, origin_f_y_recv_vec, 6);\n        tmp_U = (origin_U + parity * lat_t * lat_z * lat_y * lat_x * 9);\n        give_u(U, tmp_U);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += f_y_recv_vec[c1] * U[c0 * 3 + c1];\n              tmp1 += f_y_recv_vec[c1 + 3] * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] -= tmp1;\n            dest[c0 + 9] += tmp0;\n          }\n        }\n      }\n    }\n    // just add\n    add_ptr(origin_dest, dest, 12);\n  }\n}\n\n__global__ void\nwilson_dslash_z_send(void *device_U, void *device_src, void *device_dest,\n                     int device_lat_x, const int device_lat_y,\n                     const int device_lat_z, const int device_lat_t,\n                     const int device_parity, const int device_grid_z,\n                     void *device_b_z_send_vec, void *device_f_z_send_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int lat_xcc = lat_x * 9;\n  const int lat_yxcc = lat_y * lat_xcc;\n  const int lat_zyxcc = lat_z * lat_yxcc;\n  const int lat_tzyxcc = lat_t * lat_zyxcc;\n  const int lat_xsc = lat_x * 12;\n  const int lat_yxsc = lat_y * lat_xsc;\n  const int lat_zyxsc = lat_z * lat_yxsc;\n  const int grid_z = device_grid_z;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) + t * lat_zyxcc +\n       z * lat_yxcc + y * lat_xcc + x * 9);\n  register LatticeComplex *origin_src =\n      ((static_cast<LatticeComplex *>(device_src)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_b_z_send_vec =\n      ((static_cast<LatticeComplex *>(device_b_z_send_vec)) +\n       (t * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *origin_f_z_send_vec =\n      ((static_cast<LatticeComplex *>(device_f_z_send_vec)) +\n       (t * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex *tmp_src;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex src[12];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_z_send_vec[6];\n  register LatticeComplex f_z_send_vec[6];\n  give_value(dest, zero, 12);\n  if (grid_z == 1) {\n    {\n      // z-1\n      move_backward(move, z, lat_z);\n      tmp_U = (origin_U + move * lat_yxcc + lat_tzyxcc * 4 +\n               (1 - parity) * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * lat_yxsc);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] + src[c1 + 6] * I) * U[c1 * 3 + c0].conj();\n          tmp1 += (src[c1 + 3] - src[c1 + 9] * I) * U[c1 * 3 + c0].conj();\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] -= tmp0 * I;\n        dest[c0 + 9] += tmp1 * I;\n      }\n    }\n    {\n      // z+1\n      move_forward(move, z, lat_z);\n      tmp_U = (origin_U + lat_tzyxcc * 4 + parity * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * lat_yxsc);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] - src[c1 + 6] * I) * U[c0 * 3 + c1];\n          tmp1 += (src[c1 + 3] + src[c1 + 9] * I) * U[c0 * 3 + c1];\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] += tmp0 * I;\n        dest[c0 + 9] -= tmp1 * I;\n      }\n    }\n  } else {\n    {\n      // z-1\n      move_backward(move, z, lat_z);\n      if (move == -1) {\n        tmp_U = (origin_U + move * lat_yxcc + lat_tzyxcc * 4 +\n                 (1 - parity) * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * lat_yxsc);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 6] * I) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] - src[c1 + 9] * I) * U[c1 * 3 + c0].conj();\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] -= tmp0 * I;\n            dest[c0 + 9] += tmp1 * I;\n          }\n        }\n      } else {\n        // send in z+1 way\n        give_ptr(src, origin_src, 12);\n        {\n          // sigma src\n          for (int c1 = 0; c1 < 3; c1++) {\n            b_z_send_vec[c1] = src[c1] - src[c1 + 6] * I;\n            b_z_send_vec[c1 + 3] = src[c1 + 3] + src[c1 + 9] * I;\n          }\n          give_ptr(origin_b_z_send_vec, b_z_send_vec, 6);\n        }\n      }\n    }\n    {\n      // z+1\n      move_forward(move, z, lat_z);\n      if (move == 1) {\n        tmp_U = (origin_U + lat_tzyxcc * 4 + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * lat_yxsc);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] - src[c1 + 6] * I) * U[c0 * 3 + c1];\n              tmp1 += (src[c1 + 3] + src[c1 + 9] * I) * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] += tmp0 * I;\n            dest[c0 + 9] -= tmp1 * I;\n          }\n        }\n      } else {\n        // send in z-1 way\n        tmp_U = (origin_U + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        give_ptr(src, origin_src, 12);\n        {\n          // just tmp\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 6] * I) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] - src[c1 + 9] * I) * U[c1 * 3 + c0].conj();\n            }\n            f_z_send_vec[c0] = tmp0;\n            f_z_send_vec[c0 + 3] = tmp1;\n          }\n          give_ptr(origin_f_z_send_vec, f_z_send_vec, 6);\n        }\n      }\n    }\n  }\n  // just add\n  add_ptr(origin_dest, dest, 12);\n}\n\n__global__ void\nwilson_dslash_z_recv(void *device_U, void *device_dest, int device_lat_x,\n                     const int device_lat_y, const int device_lat_z,\n                     const int device_lat_t, const int device_parity,\n                     const int device_grid_z, void *device_b_z_recv_vec,\n                     void *device_f_z_recv_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int grid_z = device_grid_z;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) +\n       t * lat_z * lat_y * lat_x * 9 + z * lat_y * lat_x * 9 + y * lat_x * 9 +\n       x * 9);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) +\n       t * lat_z * lat_y * lat_x * 12 + z * lat_y * lat_x * 12 +\n       y * lat_x * 12 + x * 12);\n  register LatticeComplex *origin_b_z_recv_vec =\n      ((static_cast<LatticeComplex *>(device_b_z_recv_vec)) +\n       (t * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *origin_f_z_recv_vec =\n      ((static_cast<LatticeComplex *>(device_f_z_recv_vec)) +\n       (t * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_z_recv_vec[6];\n  register LatticeComplex f_z_recv_vec[6];\n  if (grid_z != 1) {\n    // needed\n    give_value(dest, zero, 12);\n    {\n      // z-1\n      move_backward(move, z, lat_z);\n      if (move != -1) {\n        // recv in z-1 way\n        give_ptr(b_z_recv_vec, origin_b_z_recv_vec, 6);\n        for (int c0 = 0; c0 < 3; c0++) {\n          dest[c0] += b_z_recv_vec[c0];\n          dest[c0 + 3] += b_z_recv_vec[c0 + 3];\n          dest[c0 + 6] -= b_z_recv_vec[c0] * I;\n          dest[c0 + 9] += b_z_recv_vec[c0 + 3] * I;\n        }\n      }\n    }\n    {\n      // z+1\n      move_forward(move, z, lat_z);\n      if (move != 1) {\n        // recv in z+1 way\n        give_ptr(f_z_recv_vec, origin_f_z_recv_vec, 6);\n        tmp_U = (origin_U + parity * lat_t * lat_z * lat_y * lat_x * 9);\n        give_u(U, tmp_U);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += f_z_recv_vec[c0] * U[c0 * 3 + c1];\n              tmp1 += f_z_recv_vec[c0 + 3] * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] += tmp0 * I;\n            dest[c0 + 9] -= tmp1 * I;\n          }\n        }\n      }\n    }\n    // just add\n    add_ptr(origin_dest, dest, 12);\n  }\n}\n\n__global__ void\nwilson_dslash_t_send(void *device_U, void *device_src, void *device_dest,\n                     int device_lat_x, const int device_lat_y,\n                     const int device_lat_z, const int device_lat_t,\n                     const int device_parity, const int device_grid_t,\n                     void *device_b_t_send_vec, void *device_f_t_send_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int lat_xcc = lat_x * 9;\n  const int lat_yxcc = lat_y * lat_xcc;\n  const int lat_zyxcc = lat_z * lat_yxcc;\n  const int lat_tzyxcc = lat_t * lat_zyxcc;\n  const int lat_xsc = lat_x * 12;\n  const int lat_yxsc = lat_y * lat_xsc;\n  const int lat_zyxsc = lat_z * lat_yxsc;\n  const int grid_t = device_grid_t;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) + t * lat_zyxcc +\n       z * lat_yxcc + y * lat_xcc + x * 9);\n  register LatticeComplex *origin_src =\n      ((static_cast<LatticeComplex *>(device_src)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) + t * lat_zyxsc +\n       z * lat_yxsc + y * lat_xsc + x * 12);\n  register LatticeComplex *origin_b_t_send_vec =\n      ((static_cast<LatticeComplex *>(device_b_t_send_vec)) +\n       (z * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *origin_f_t_send_vec =\n      ((static_cast<LatticeComplex *>(device_f_t_send_vec)) +\n       (z * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex *tmp_src;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex src[12];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_t_send_vec[6];\n  register LatticeComplex f_t_send_vec[6];\n  give_value(dest, zero, 12);\n  if (grid_t == 1) {\n    {\n      // t-1\n      move_backward(move, t, lat_t);\n      tmp_U = (origin_U + move * lat_zyxcc + lat_tzyxcc * 6 +\n               (1 - parity) * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * lat_zyxsc);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] + src[c1 + 6]) * U[c1 * 3 + c0].conj();\n          tmp1 += (src[c1 + 3] + src[c1 + 9]) * U[c1 * 3 + c0].conj();\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] += tmp0;\n        dest[c0 + 9] += tmp1;\n      }\n    }\n    {\n      // t+1\n      move_forward(move, t, lat_t);\n      tmp_U = (origin_U + lat_tzyxcc * 6 + parity * lat_tzyxcc);\n      give_u(U, tmp_U);\n      tmp_src = (origin_src + move * lat_zyxsc);\n      give_ptr(src, tmp_src, 12);\n    }\n    {\n      for (int c0 = 0; c0 < 3; c0++) {\n        tmp0 = zero;\n        tmp1 = zero;\n        for (int c1 = 0; c1 < 3; c1++) {\n          tmp0 += (src[c1] - src[c1 + 6]) * U[c0 * 3 + c1];\n          tmp1 += (src[c1 + 3] - src[c1 + 9]) * U[c0 * 3 + c1];\n        }\n        dest[c0] += tmp0;\n        dest[c0 + 3] += tmp1;\n        dest[c0 + 6] -= tmp0;\n        dest[c0 + 9] -= tmp1;\n      }\n    }\n  } else {\n    {\n      // t-1\n      move_backward(move, t, lat_t);\n      if (move == -1) {\n        tmp_U = (origin_U + move * lat_zyxcc + lat_tzyxcc * 6 +\n                 (1 - parity) * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * lat_zyxsc);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 6]) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] + src[c1 + 9]) * U[c1 * 3 + c0].conj();\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] += tmp0;\n            dest[c0 + 9] += tmp1;\n          }\n        }\n      } else {\n        // send in t+1 way\n        give_ptr(src, origin_src, 12);\n        {\n          // sigma src\n          for (int c1 = 0; c1 < 3; c1++) {\n            b_t_send_vec[c1] = src[c1] - src[c1 + 6];\n            b_t_send_vec[c1 + 3] = src[c1 + 3] - src[c1 + 9];\n          }\n          give_ptr(origin_b_t_send_vec, b_t_send_vec, 6);\n        }\n      }\n    }\n    {\n      // t+1\n      move_forward(move, t, lat_t);\n      if (move == 1) {\n        tmp_U = (origin_U + lat_tzyxcc * 6 + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        tmp_src = (origin_src + move * lat_zyxsc);\n        give_ptr(src, tmp_src, 12);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] - src[c1 + 6]) * U[c0 * 3 + c1];\n              tmp1 += (src[c1 + 3] - src[c1 + 9]) * U[c0 * 3 + c1];\n            }\n            dest[c0] += tmp0;\n            dest[c0 + 3] += tmp1;\n            dest[c0 + 6] -= tmp0;\n            dest[c0 + 9] -= tmp1;\n          }\n        }\n      } else {\n        // send in t-1 way\n        tmp_U = (origin_U + parity * lat_tzyxcc);\n        give_u(U, tmp_U);\n        give_ptr(src, origin_src, 12);\n        {\n          // just tmp\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += (src[c1] + src[c1 + 6]) * U[c1 * 3 + c0].conj();\n              tmp1 += (src[c1 + 3] + src[c1 + 9]) * U[c1 * 3 + c0].conj();\n            }\n            f_t_send_vec[c0] = tmp0;\n            f_t_send_vec[c0 + 3] = tmp1;\n          }\n          give_ptr(origin_f_t_send_vec, f_t_send_vec, 6);\n        }\n      }\n    }\n  }\n  // just add\n  add_ptr(origin_dest, dest, 12);\n}\n\n__global__ void\nwilson_dslash_t_recv(void *device_U, void *device_dest, int device_lat_x,\n                     const int device_lat_y, const int device_lat_z,\n                     const int device_lat_t, const int device_parity,\n                     const int device_grid_t, void *device_b_t_recv_vec,\n                     void *device_f_t_recv_vec) {\n  register int parity = blockIdx.x * blockDim.x + threadIdx.x;\n  const int lat_x = device_lat_x;\n  const int lat_y = device_lat_y;\n  const int lat_z = device_lat_z;\n  const int lat_t = device_lat_t;\n  const int grid_t = device_grid_t;\n  register int move;\n  move = lat_x * lat_y * lat_z;\n  const int t = parity / move;\n  parity -= t * move;\n  move = lat_x * lat_y;\n  const int z = parity / move;\n  parity -= z * move;\n  const int y = parity / lat_x;\n  const int x = parity - y * lat_x;\n  parity = device_parity;\n  register LatticeComplex I(0.0, 1.0);\n  register LatticeComplex zero(0.0, 0.0);\n  register LatticeComplex *origin_U =\n      ((static_cast<LatticeComplex *>(device_U)) +\n       t * lat_z * lat_y * lat_x * 9 + z * lat_y * lat_x * 9 + y * lat_x * 9 +\n       x * 9);\n  register LatticeComplex *origin_dest =\n      ((static_cast<LatticeComplex *>(device_dest)) +\n       t * lat_z * lat_y * lat_x * 12 + z * lat_y * lat_x * 12 +\n       y * lat_x * 12 + x * 12);\n  register LatticeComplex *origin_b_t_recv_vec =\n      ((static_cast<LatticeComplex *>(device_b_t_recv_vec)) +\n       (z * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *origin_f_t_recv_vec =\n      ((static_cast<LatticeComplex *>(device_f_t_recv_vec)) +\n       (z * lat_y * lat_x + y * lat_x + x) * 6);\n  register LatticeComplex *tmp_U;\n  register LatticeComplex tmp0(0.0, 0.0);\n  register LatticeComplex tmp1(0.0, 0.0);\n  register LatticeComplex U[9];\n  register LatticeComplex dest[12];\n  register LatticeComplex b_t_recv_vec[6];\n  register LatticeComplex f_t_recv_vec[6];\n  if (grid_t != 1) {\n    // needed\n    give_value(dest, zero, 12);\n    {\n      // t-1\n      move_backward(move, t, lat_t);\n      if (move != -1) {\n        // recv in t-1 way\n        give_ptr(b_t_recv_vec, origin_b_t_recv_vec, 6);\n        for (int c0 = 0; c0 < 3; c0++) {\n          dest[c0] += b_t_recv_vec[c0];\n          dest[c0 + 3] += b_t_recv_vec[c0 + 3];\n          dest[c0 + 6] += b_t_recv_vec[c0];\n          dest[c0 + 9] += b_t_recv_vec[c0 + 3];\n        }\n      }\n    }\n    {\n      // t+1\n      move_forward(move, t, lat_t);\n      if (move != 1) {\n        // recv in t+1 way\n        give_ptr(f_t_recv_vec, origin_f_t_recv_vec, 6);\n        tmp_U = (origin_U + parity * lat_t * lat_z * lat_y * lat_x * 9);\n        give_u(U, tmp_U);\n        {\n          for (int c0 = 0; c0 < 3; c0++) {\n            tmp0 = zero;\n            tmp1 = zero;\n            for (int c1 = 0; c1 < 3; c1++) {\n              tmp0 += f_t_recv_vec[c0] * U[c0 * 3 + c1];\n              tmp1 += f_t_recv_vec[c0 + 3] * U[c0 * 3 + c1];\n            }\n            dest[c0] += b_t_recv_vec[c0];\n            dest[c0 + 3] += b_t_recv_vec[c0 + 3];\n            dest[c0 + 6] -= b_t_recv_vec[c0];\n            dest[c0 + 9] -= b_t_recv_vec[c0 + 3];\n          }\n        }\n      }\n    }\n    // just add\n    add_ptr(origin_dest, dest, 12);\n  }\n}","uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu","version":1}}}},{"pid":0,"ph":"X","name":"Queued:DocumentLinks","ts":41011.196000000004,"tid":24192,"dur":2.444999999999709,"args":{"CurrentRequest":"Update","PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":40950.150999999998,"tid":24192,"id":3,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":674534.41200000001,"tid":24202,"bp":"e","id":3,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":674538.56000000006,"tid":24202,"dur":7.0929999999934807,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":674578.946,"tid":24202,"args":{"Message":"--> reply:textDocument/documentLink(1) 633 ms"}},{"pid":0,"ph":"X","name":"DocumentLinks","ts":674529.14199999999,"tid":24202,"dur":91.863000000012107,"args":{}},{"pid":0,"ph":"X","name":"textDocument/documentLink","ts":40950.150999999998,"tid":24192,"dur":65.283000000003085,"args":{"Params":{"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[{"range":{"end":{"character":35,"line":1},"start":{"character":9,"line":1}},"target":"file:///home/zhangxin/qcu/include/qcu_cuda.h"}]}},{"pid":0,"ph":"X","name":"Queued:InlayHints","ts":43497.406000000003,"tid":24192,"dur":2.2039999999979045,"args":{"CurrentRequest":"Update","PreambleRequestsNames":[],"RequestsNames":["DocumentLinks"]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":43410.122000000003,"tid":24192,"id":4,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":674656.08100000001,"tid":24202,"bp":"e","id":4,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":674658.48600000003,"tid":24202,"dur":3.3460000000195578,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":674955.505,"tid":24202,"args":{"Message":"--> reply:textDocument/inlayHint(2) 631 ms"}},{"pid":0,"ph":"X","name":"InlayHints","ts":674652.29399999999,"tid":24202,"dur":316.25500000000466,"args":{}},{"pid":0,"ph":"X","name":"textDocument/inlayHint","ts":43410.122000000003,"tid":24192,"dur":92.192999999999302,"args":{"Params":{"range":{"end":{"character":21,"line":228},"start":{"character":0,"line":114}},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[]}},{"pid":0,"ph":"X","name":"Queued:SemanticHighlights","ts":550848.76800000004,"tid":24192,"dur":4.1879999999655411,"args":{"CurrentRequest":"Update","PreambleRequestsNames":[],"RequestsNames":["DocumentLinks","InlayHints"]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":550786.85100000002,"tid":24192,"id":5,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":674985.95200000005,"tid":24202,"bp":"e","id":5,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":674987.87600000005,"tid":24202,"dur":2.3439999999245629,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":677518.21900000004,"tid":24202,"args":{"Message":"--> reply:textDocument/semanticTokens/full(4) 126 ms"}},{"pid":0,"ph":"X","name":"SemanticHighlights","ts":674983.13699999999,"tid":24202,"dur":3557.1959999999963,"args":{}},{"pid":0,"ph":"X","name":"textDocument/semanticTokens/full","ts":550786.85100000002,"tid":24192,"dur":68.449000000022352,"args":{"Params":{"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":{"data":[3,16,24,3,131075,3,15,6,1,16387,0,18,1,14,33024,0,2,1,21,8192,0,11,1,14,33024,0,2,1,21,8192,0,12,1,14,33024,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,2,10,19,131072,0,11,11,1,16384,0,13,4,1,16384,4,0,20,3,131075,5,15,6,1,16387,0,18,1,14,33024,0,2,1,21,8192,0,11,1,14,33024,0,2,1,21,8192,0,12,1,14,33024,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,10,1,16403,0,13,5,1,16400,0,6,1,21,0,0,2,9,1,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,12,2,1,16403,0,6,1,1,16400,0,2,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,10,1,16387,1,20,14,8,131072,0,18,10,2,16384,0,13,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,16,7,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,3,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,2,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,1,6,6,1,16400,0,7,2,21,0,3,6,15,19,131072,0,16,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,0,7,2,1,16400,0,4,6,1,16384,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,4,1,21,0,0,5,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,5,6,14,19,131072,0,15,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,0,7,2,1,16400,0,4,6,1,16384,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,6,6,15,19,131072,0,16,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,0,7,2,1,16400,0,4,6,1,16384,1,10,4,1,16384,0,5,2,21,0,0,5,2,21,0,0,3,4,1,16384,0,5,2,21,0,0,3,1,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,4,1,21,0,0,5,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,5,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,12,1,16384,0,13,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,6,14,19,131072,0,15,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,0,7,2,1,16400,0,4,6,1,16384,1,10,4,1,16384,0,5,2,21,0,0,5,2,21,0,0,3,4,1,16384,0,5,2,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,5,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,12,1,16384,0,13,2,1,16384,0,6,4,1,16384,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,4,1,16384,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,2,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,4,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,12,2,1,16403,0,6,1,1,16400,0,2,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,1,7,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,6,6,1,16400,0,7,2,21,0,2,4,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,3,6,15,19,131072,0,16,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,0,7,2,1,16400,0,4,6,1,16384,1,10,4,1,16384,0,5,2,21,0,0,5,2,21,0,0,3,4,1,16384,0,5,2,21,0,0,3,1,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,1,16384,0,7,12,1,16384,0,13,2,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,1,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,6,1,1,16384,6,6,14,19,131072,0,15,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,0,7,2,1,16400,0,4,6,1,16384,1,10,4,1,16384,0,5,2,21,0,0,5,2,21,0,0,3,4,1,16384,0,5,2,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,6,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,6,4,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,5,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,10,1,16403,0,13,5,1,16400,0,6,1,21,0,0,2,9,1,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,10,1,16387,1,20,14,8,131072,0,18,10,2,16384,0,13,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,16,7,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,3,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,2,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,1,6,6,1,16400,0,7,2,21,0,3,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,1,18,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,7,1,16400,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,5,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,7,1,16400,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,6,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,0,3,1,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,1,20,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,7,1,16400,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,5,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,12,1,16384,0,13,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,7,1,16400,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,5,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,12,1,16384,0,13,2,1,16384,0,6,4,1,16384,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,4,1,16384,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,2,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,4,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,1,7,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,6,6,1,16400,0,7,2,21,0,2,4,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,3,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,0,3,1,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,1,16384,0,7,12,1,16384,0,13,2,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,6,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,6,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,6,4,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,5,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,10,1,16403,0,13,5,1,16400,0,6,1,21,0,0,2,9,1,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,10,1,16387,1,20,14,8,131072,0,18,10,2,16384,0,13,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,16,7,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,3,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,2,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,1,6,6,1,16400,0,7,2,21,0,3,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,1,18,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,8,1,16400,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,5,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,8,1,16400,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,6,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,0,3,1,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,1,20,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,8,1,16400,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,5,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,12,1,16384,0,13,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,8,1,16400,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,5,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,3,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,12,1,16384,0,13,2,1,16384,0,6,4,1,16384,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,4,1,16384,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,2,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,4,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,1,7,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,6,6,1,16400,0,7,2,21,0,2,4,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,3,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,0,3,1,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,1,16384,0,7,12,1,16384,0,13,2,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,6,1,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,1,1,16384,6,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,6,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,5,2,21,8192,0,3,4,1,16384,0,7,1,1,16384,6,4,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,5,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,10,1,16403,0,13,5,1,16400,0,6,1,21,0,0,2,9,1,16400,1,12,7,1,16403,0,10,5,1,16400,0,6,1,21,0,1,12,8,1,16403,0,11,5,1,16400,0,6,1,21,0,0,2,7,1,16400,1,12,9,1,16403,0,12,5,1,16400,0,6,1,21,0,0,2,8,1,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,10,1,16387,1,20,14,8,131072,0,18,10,2,16384,0,13,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,9,1,16400,0,10,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,8,1,16400,0,9,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,7,1,16400,0,8,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,16,7,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,3,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,2,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,1,6,6,1,16400,0,7,2,21,0,3,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,9,1,16400,0,10,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,1,18,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,9,1,16400,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,5,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,6,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,6,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,6,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,9,1,16400,1,6,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,3,15,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,8,4,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,7,4,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,10,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,8,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,8,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,6,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,0,3,1,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,9,1,16400,0,10,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,1,20,1,21,0,0,2,6,1,16384,0,8,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,9,1,16400,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,5,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,12,1,16384,0,13,2,1,16384,0,4,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,5,1,21,8192,0,2,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,10,1,16400,0,11,1,21,0,0,4,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,7,1,16384,0,8,1,21,0,0,3,10,1,16384,0,11,1,21,0,0,2,4,1,16384,0,5,1,21,0,0,2,9,1,16400,1,8,8,19,131072,0,9,3,1,16384,0,5,7,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,4,1,16384,5,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,10,1,16400,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,1,8,8,19,131072,0,9,3,1,16384,0,5,10,1,16384,3,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,6,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,4,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,7,3,1,16384,0,4,2,1,16384,0,3,1,21,0,0,6,1,21,8192,0,2,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,12,1,16384,0,13,2,1,16384,0,6,4,1,16384,1,12,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,4,1,16384,2,10,8,19,131072,0,9,19,1,16384,0,21,12,1,16384,6,2,7,19,131072,0,8,11,1,16384,0,13,4,1,16384,4,0,20,3,131075,5,15,6,1,16387,1,12,5,1,16403,0,8,12,2,16384,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,5,1,16403,0,8,12,2,16400,1,12,6,1,16403,0,9,13,2,16400,1,15,4,1,16387,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,2,4,1,16384,0,5,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,4,1,16384,1,2,6,1,16384,0,7,2,21,0,0,3,1,1,16400,0,2,1,21,0,0,2,4,1,16384,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,5,1,16400,1,12,1,1,16403,0,4,6,1,16384,0,7,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,1,2,6,1,16384,0,7,1,21,0,0,2,13,2,16400,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,16,8,1,16387,1,20,14,8,131072,0,18,8,2,16384,0,11,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,4,1,21,0,1,7,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,11,1,16387,1,20,14,8,131072,0,18,11,2,16384,0,14,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,1,7,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,5,1,21,0,0,2,1,1,16400,0,2,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,19,1,16387,1,20,14,8,131072,0,18,19,2,16384,0,22,1,21,0,1,8,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,2,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,1,1,16400,0,3,1,21,0,1,11,14,8,131072,0,16,5,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,1,1,16387,1,11,14,8,131072,0,15,4,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,11,14,8,131072,0,15,12,1,16387,1,6,6,1,16400,0,7,2,21,0,2,4,10,19,131072,0,11,4,1,16384,0,6,4,1,16384,3,6,13,19,131072,0,14,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,0,3,1,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,17,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,10,4,1,16384,0,5,2,1,16384,0,7,12,1,16384,0,13,2,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,1,10,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,6,6,12,19,131072,0,13,4,1,16384,0,6,1,1,16400,0,3,5,1,16400,1,10,4,1,16384,0,5,2,21,0,2,8,8,19,131072,0,9,12,1,16384,0,14,19,1,16384,1,8,5,1,16384,0,6,1,21,0,0,3,8,1,16384,0,9,1,21,0,0,2,6,1,16384,0,7,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,0,2,5,1,16400,0,6,1,21,0,1,8,6,19,131072,0,7,1,1,16384,0,3,5,1,16384,2,19,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,12,4,1,16384,0,7,4,1,16384,1,12,4,1,16384,0,7,4,1,16384,1,21,2,1,16387,0,8,2,1,16384,0,3,1,21,0,0,5,2,1,16384,0,2,2,21,0,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,6,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,1,14,4,1,16384,0,5,2,21,8192,0,3,12,1,16384,0,13,2,1,16384,0,3,1,21,0,0,7,1,1,16384,0,2,2,1,16384,0,3,1,21,0,0,4,1,21,0,0,2,2,1,16384,2,12,4,1,16384,0,5,2,1,16384,0,7,12,1,16384,0,13,2,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,1,12,4,1,16384,0,5,2,1,16384,0,3,1,21,0,0,8,12,1,16384,0,13,2,1,16384,0,3,1,21,0,6,4,7,19,131072,0,8,11,1,16384,0,13,4,1,16384],"resultId":"1"}}},{"pid":0,"ph":"i","name":"Log","ts":679322.02399999998,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":843582.74300000002,"tid":24192,"args":{"Message":"<-- textDocument/documentLink(5)"}},{"pid":0,"ph":"X","name":"Queued:DocumentLinks","ts":843616.80700000003,"tid":24192,"dur":1.4329999999608845,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":843571.94299999997,"tid":24192,"id":6,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":843657.52399999998,"tid":24202,"bp":"e","id":6,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":843661.47100000002,"tid":24202,"dur":6.2920000000158325,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":843694.66399999999,"tid":24202,"args":{"Message":"--> reply:textDocument/documentLink(5) 0 ms"}},{"pid":0,"ph":"X","name":"DocumentLinks","ts":843652.82499999995,"tid":24202,"dur":76.684000000008382,"args":{}},{"pid":0,"ph":"X","name":"textDocument/documentLink","ts":843571.94299999997,"tid":24192,"dur":51.456000000005588,"args":{"Params":{"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[{"range":{"end":{"character":35,"line":1},"start":{"character":9,"line":1}},"target":"file:///home/zhangxin/qcu/include/qcu_cuda.h"}]}},{"pid":0,"ph":"i","name":"Log","ts":843784.98400000005,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":899061.79099999997,"tid":24192,"args":{"Message":"<-- textDocument/hover(6)"}},{"pid":0,"ph":"X","name":"Queued:Hover","ts":899097.83900000004,"tid":24192,"dur":1.5929999999934807,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":899049.51800000004,"tid":24192,"id":7,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":899143.95600000001,"tid":24202,"bp":"e","id":7,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":899147.522,"tid":24202,"dur":7.7149999999674037,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":899283.78899999999,"tid":24202,"args":{"Message":"--> reply:textDocument/hover(6) 0 ms"}},{"pid":0,"ph":"X","name":"Hover","ts":899139.49699999997,"tid":24202,"dur":184.51800000004005,"args":{}},{"pid":0,"ph":"X","name":"textDocument/hover","ts":899049.51800000004,"tid":24192,"dur":55.304000000003725,"args":{"Params":{"position":{"character":5,"line":166},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":null}},{"pid":0,"ph":"i","name":"Log","ts":899358.12899999996,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":926147.85499999998,"tid":24192,"args":{"Message":"<-- $/setTrace"}},{"pid":0,"ph":"i","name":"Log","ts":926188.26100000006,"tid":24192,"args":{"Message":"unhandled notification $/setTrace"}},{"pid":0,"ph":"X","name":"$/setTrace","ts":926135.26199999999,"tid":24192,"dur":64.991999999969266,"args":{"Params":{"value":"off"}}},{"pid":0,"ph":"i","name":"Log","ts":1089984.0249999999,"tid":24192,"args":{"Message":"<-- $/setTrace"}},{"pid":0,"ph":"i","name":"Log","ts":1090026.385,"tid":24192,"args":{"Message":"unhandled notification $/setTrace"}},{"pid":0,"ph":"X","name":"$/setTrace","ts":1089970.159,"tid":24192,"dur":67.91800000006333,"args":{"Params":{"value":"off"}}},{"pid":0,"ph":"i","name":"Log","ts":1318787.6529999999,"tid":24192,"args":{"Message":"<-- textDocument/semanticTokens/full/delta(7)"}},{"pid":0,"ph":"X","name":"Queued:SemanticHighlights","ts":1318832.507,"tid":24192,"dur":2.5749999999534339,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":1318773.3559999999,"tid":24192,"id":8,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":1318871.0090000001,"tid":24202,"bp":"e","id":8,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":1318874.9269999999,"tid":24202,"dur":6.7129999999888241,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":1321893.879,"tid":24202,"args":{"Message":"--> reply:textDocument/semanticTokens/full/delta(7) 3 ms"}},{"pid":0,"ph":"X","name":"SemanticHighlights","ts":1318866.2609999999,"tid":24202,"dur":3097.1589999999851,"args":{}},{"pid":0,"ph":"X","name":"textDocument/semanticTokens/full/delta","ts":1318773.3559999999,"tid":24192,"dur":67.33600000012666,"args":{"Params":{"previousResultId":"1","textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":{"edits":[],"resultId":"2"}}},{"pid":0,"ph":"i","name":"Log","ts":1321984.27,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":1400358.6440000001,"tid":24192,"args":{"Message":"<-- $/setTrace"}},{"pid":0,"ph":"i","name":"Log","ts":1400398.72,"tid":24192,"args":{"Message":"unhandled notification $/setTrace"}},{"pid":0,"ph":"X","name":"$/setTrace","ts":1400344.257,"tid":24192,"dur":66.104000000050291,"args":{"Params":{"value":"off"}}},{"pid":0,"ph":"i","name":"Log","ts":1423964.9180000001,"tid":24303,"args":{"Message":"Indexed c++14 standard library (incomplete due to errors): 10847 symbols, 2096 filtered"}},{"pid":0,"ph":"X","name":"StandardLibraryIndex","ts":466729.61900000001,"tid":24303,"dur":959404.00100000016,"args":{"symbols":10847}},{"pid":0,"ph":"i","name":"Log","ts":1454336.527,"tid":24192,"args":{"Message":"<-- textDocument/documentLink(8)"}},{"pid":0,"ph":"X","name":"Queued:DocumentLinks","ts":1454379.929,"tid":24192,"dur":1.5730000000912696,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":1454321.98,"tid":24192,"id":9,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":1454435.6740000001,"tid":24202,"bp":"e","id":9,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":1454442.5160000001,"tid":24202,"dur":9.738999999826774,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":1454481.0589999999,"tid":24202,"args":{"Message":"--> reply:textDocument/documentLink(8) 0 ms"}},{"pid":0,"ph":"X","name":"DocumentLinks","ts":1454427.929,"tid":24202,"dur":85.671000000089407,"args":{}},{"pid":0,"ph":"X","name":"textDocument/documentLink","ts":1454321.98,"tid":24192,"dur":65.493000000016764,"args":{"Params":{"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[{"range":{"end":{"character":35,"line":1},"start":{"character":9,"line":1}},"target":"file:///home/zhangxin/qcu/include/qcu_cuda.h"}]}},{"pid":0,"ph":"i","name":"Log","ts":1454531.334,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":1628529.02,"tid":24192,"args":{"Message":"<-- $/setTrace"}},{"pid":0,"ph":"i","name":"Log","ts":1628573.4339999999,"tid":24192,"args":{"Message":"unhandled notification $/setTrace"}},{"pid":0,"ph":"X","name":"$/setTrace","ts":1628514.0919999999,"tid":24192,"dur":104.07600000011735,"args":{"Params":{"value":"off"}}},{"pid":0,"ph":"i","name":"Log","ts":1802899.879,"tid":24192,"args":{"Message":"<-- textDocument/documentSymbol(9)"}},{"pid":0,"ph":"X","name":"Queued:DocumentSymbols","ts":1802946.537,"tid":24192,"dur":2.6450000000186265,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":1802885.1510000001,"tid":24192,"id":10,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":1803042.247,"tid":24202,"bp":"e","id":10,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":1803050.2620000001,"tid":24202,"dur":10.559999999823049,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":1803391.524,"tid":24202,"args":{"Message":"--> reply:textDocument/documentSymbol(9) 0 ms"}},{"pid":0,"ph":"X","name":"DocumentSymbols","ts":1803031.6370000001,"tid":24202,"dur":546.45899999979883,"args":{}},{"pid":0,"ph":"X","name":"textDocument/documentSymbol","ts":1802885.1510000001,"tid":24192,"dur":70.432999999960884,"args":{"Params":{"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[{"detail":"int (void *, int, const int, const int)","kind":12,"name":"wilson_dslash_clear_dest","range":{"end":{"character":1,"line":25},"start":{"character":0,"line":3}},"selectionRange":{"end":{"character":40,"line":3},"start":{"character":16,"line":3}}},{"detail":"int (void *, void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_x_send","range":{"end":{"character":1,"line":211},"start":{"character":0,"line":27}},"selectionRange":{"end":{"character":20,"line":28},"start":{"character":0,"line":28}}},{"detail":"int (void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_x_recv","range":{"end":{"character":1,"line":303},"start":{"character":0,"line":213}},"selectionRange":{"end":{"character":20,"line":214},"start":{"character":0,"line":214}}},{"detail":"int (void *, void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_y_send","range":{"end":{"character":1,"line":490},"start":{"character":0,"line":305}},"selectionRange":{"end":{"character":20,"line":306},"start":{"character":0,"line":306}}},{"detail":"int (void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_y_recv","range":{"end":{"character":1,"line":581},"start":{"character":0,"line":492}},"selectionRange":{"end":{"character":20,"line":493},"start":{"character":0,"line":493}}},{"detail":"int (void *, void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_z_send","range":{"end":{"character":1,"line":768},"start":{"character":0,"line":583}},"selectionRange":{"end":{"character":20,"line":584},"start":{"character":0,"line":584}}},{"detail":"int (void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_z_recv","range":{"end":{"character":1,"line":859},"start":{"character":0,"line":770}},"selectionRange":{"end":{"character":20,"line":771},"start":{"character":0,"line":771}}},{"detail":"int (void *, void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_t_send","range":{"end":{"character":1,"line":1046},"start":{"character":0,"line":861}},"selectionRange":{"end":{"character":20,"line":862},"start":{"character":0,"line":862}}},{"detail":"int (void *, void *, int, const int, const int, const int, const int, const int, void *, void *)","kind":12,"name":"wilson_dslash_t_recv","range":{"end":{"character":1,"line":1137},"start":{"character":0,"line":1048}},"selectionRange":{"end":{"character":20,"line":1049},"start":{"character":0,"line":1049}}}]}},{"pid":0,"ph":"i","name":"Log","ts":1803714.8729999999,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":1852422.1950000001,"tid":24192,"args":{"Message":"<-- textDocument/inlayHint(10)"}},{"pid":0,"ph":"X","name":"Queued:InlayHints","ts":1852487.6980000001,"tid":24192,"dur":1.6939999999012798,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":1852400.855,"tid":24192,"id":11,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":1852562.3389999999,"tid":24202,"bp":"e","id":11,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":1852569.2720000001,"tid":24202,"dur":10.0089999998454,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":1853193.1059999999,"tid":24202,"args":{"Message":"--> reply:textDocument/inlayHint(10) 0 ms"}},{"pid":0,"ph":"X","name":"InlayHints","ts":1852552.7309999999,"tid":24202,"dur":683.97700000018813,"args":{}},{"pid":0,"ph":"X","name":"textDocument/inlayHint","ts":1852400.855,"tid":24192,"dur":98.294999999925494,"args":{"Params":{"range":{"end":{"character":21,"line":228},"start":{"character":0,"line":114}},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[]}},{"pid":0,"ph":"i","name":"Log","ts":1853271.6740000001,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":2778765.0890000002,"tid":24192,"args":{"Message":"<-- textDocument/hover(11)"}},{"pid":0,"ph":"X","name":"Queued:Hover","ts":2778814.5619999999,"tid":24192,"dur":2.5150000001303852,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":2778749.0490000001,"tid":24192,"id":12,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":2778858.716,"tid":24202,"bp":"e","id":12,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":2778864.1660000002,"tid":24202,"dur":8.7959999996237457,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":2779035.318,"tid":24202,"args":{"Message":"--> reply:textDocument/hover(11) 0 ms"}},{"pid":0,"ph":"X","name":"Hover","ts":2778854.077,"tid":24202,"dur":208.70299999974668,"args":{}},{"pid":0,"ph":"X","name":"textDocument/hover","ts":2778749.0490000001,"tid":24192,"dur":73.799000000115484,"args":{"Params":{"position":{"character":30,"line":168},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":null}},{"pid":0,"ph":"i","name":"Log","ts":2779119.446,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":3026776.5800000001,"tid":24192,"args":{"Message":"<-- textDocument/hover(12)"}},{"pid":0,"ph":"X","name":"Queued:Hover","ts":3026840.1200000001,"tid":24192,"dur":3.7169999997131526,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":3026756.7629999998,"tid":24192,"id":13,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":3026917.2949999999,"tid":24202,"bp":"e","id":13,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":3026926.392,"tid":24202,"dur":12.975000000093132,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":3027956.4909999999,"tid":24202,"args":{"Message":"--> reply:textDocument/hover(12) 1 ms"}},{"pid":0,"ph":"X","name":"Hover","ts":3026905.9640000002,"tid":24202,"dur":1103.1959999999963,"args":{}},{"pid":0,"ph":"X","name":"textDocument/hover","ts":3026756.7629999998,"tid":24192,"dur":95.560000000055879,"args":{"Params":{"position":{"character":32,"line":167},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":{"contents":{"kind":"markdown","value":"### variable `lat_x`  \n\n---\nType: `const int`  \n\n---\n```cpp\n// In wilson_dslash_x_send\nconst int lat_x = device_lat_x\n```"},"range":{"end":{"character":35,"line":167},"start":{"character":30,"line":167}}}}},{"pid":0,"ph":"i","name":"Log","ts":3028038.5959999999,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":4488912.3679999998,"tid":24192,"args":{"Message":"<-- textDocument/inlayHint(13)"}},{"pid":0,"ph":"X","name":"Queued:InlayHints","ts":4488944.9890000001,"tid":24192,"dur":1.4029999999329448,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":4488900.4749999996,"tid":24192,"id":14,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":4488971.2180000003,"tid":24202,"bp":"e","id":14,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":4488974.1639999999,"tid":24202,"dur":6.492000000551343,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":4489275.4110000003,"tid":24202,"args":{"Message":"--> reply:textDocument/inlayHint(13) 0 ms"}},{"pid":0,"ph":"X","name":"InlayHints","ts":4488967.5710000005,"tid":24202,"dur":334.61999999918044,"args":{}},{"pid":0,"ph":"X","name":"textDocument/inlayHint","ts":4488900.4749999996,"tid":24192,"dur":50.15500000026077,"args":{"Params":{"range":{"end":{"character":33,"line":250},"start":{"character":0,"line":102}},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[]}},{"pid":0,"ph":"i","name":"Log","ts":4489322.0190000003,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":5041389.8600000003,"tid":24192,"args":{"Message":"<-- textDocument/hover(14)"}},{"pid":0,"ph":"X","name":"Queued:Hover","ts":5041451.8459999999,"tid":24192,"dur":4.098000000230968,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":5041370.6430000002,"tid":24192,"id":15,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":5041497.9730000002,"tid":24202,"bp":"e","id":15,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":5041503.6840000004,"tid":24202,"dur":118.67299999948591,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":5041776.7280000001,"tid":24202,"args":{"Message":"--> reply:textDocument/hover(14) 0 ms"}},{"pid":0,"ph":"X","name":"Hover","ts":5041490.8099999996,"tid":24202,"dur":317.70800000056624,"args":{}},{"pid":0,"ph":"X","name":"textDocument/hover","ts":5041370.6430000002,"tid":24192,"dur":93.525999999605119,"args":{"Params":{"position":{"character":33,"line":174},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":null}},{"pid":0,"ph":"i","name":"Log","ts":5041872.8190000001,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":5343000.6469999999,"tid":24192,"args":{"Message":"<-- textDocument/hover(15)"}},{"pid":0,"ph":"X","name":"Queued:Hover","ts":5343045.6119999997,"tid":24192,"dur":1.6030000001192093,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":5342986.1600000001,"tid":24192,"id":16,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":5343076.9009999996,"tid":24202,"bp":"e","id":16,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":5343080.7180000003,"tid":24202,"dur":5.8810000000521541,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":5343244.2960000001,"tid":24202,"args":{"Message":"--> reply:textDocument/hover(15) 0 ms"}},{"pid":0,"ph":"X","name":"Hover","ts":5343072.3119999999,"tid":24202,"dur":194.57600000035018,"args":{}},{"pid":0,"ph":"X","name":"textDocument/hover","ts":5342986.1600000001,"tid":24192,"dur":65.803999999538064,"args":{"Params":{"position":{"character":32,"line":174},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":null}},{"pid":0,"ph":"i","name":"Log","ts":5343289.4110000003,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":5561995.398,"tid":24192,"args":{"Message":"<-- textDocument/inlayHint(16)"}},{"pid":0,"ph":"X","name":"Queued:InlayHints","ts":5562029.7419999996,"tid":24192,"dur":1.4230000004172325,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":5561983.8159999996,"tid":24192,"id":17,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":5562060.4900000002,"tid":24202,"bp":"e","id":17,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":5562064.7980000004,"tid":24202,"dur":6.7529999995604157,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":5562429.324,"tid":24202,"args":{"Message":"--> reply:textDocument/inlayHint(16) 0 ms"}},{"pid":0,"ph":"X","name":"InlayHints","ts":5562055.2699999996,"tid":24202,"dur":399.60300000011921,"args":{}},{"pid":0,"ph":"X","name":"textDocument/inlayHint","ts":5561983.8159999996,"tid":24192,"dur":51.286000000312924,"args":{"Params":{"range":{"end":{"character":15,"line":243},"start":{"character":0,"line":96}},"textDocument":{"uri":"file:///home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},"Reply":[]}},{"pid":0,"ph":"i","name":"Log","ts":5562476.2529999996,"tid":24202,"args":{"Message":"--> textDocument/clangd.fileStatus"}},{"pid":0,"ph":"i","name":"Log","ts":6877350.6370000001,"tid":24192,"args":{"Message":"<-- textDocument/inlayHint(17)"}},{"pid":0,"ph":"X","name":"Queued:InlayHints","ts":6877385.8830000004,"tid":24192,"dur":1.7539999997243285,"args":{"PreambleRequestsNames":[],"RequestsNames":[]}},{"pid":0,"ph":"s","name":"Context crosses threads","ts":6877336.8310000002,"tid":24192,"id":18,"cat":"mock_cat"},{"pid":0,"ph":"f","name":"Context crosses threads","ts":6877437.0290000001,"tid":24202,"bp":"e","id":18,"cat":"mock_cat"},{"pid":0,"ph":"X","name":"getConfig","ts":6877442.54,"tid":24202,"dur":7.7539999997243285,"args":{"path":"/home/zhangxin/qcu/src/cuda/mpi_wilson_dslash.cu"}},{"pid":0,"ph":"i","name":"Log","ts":6877866.5980000002,"tid":24202,"args":{"Message":"--> reply:textDocument/inlayHint(17) 0 ms"}},{"pid":0,"ph":"X","name":"InlayHints","ts":6877430.5769999996,"tid":24202,"dur":463.84300000034273,"args":{}},{"pid":0,"ph":"X","name":"textDocument/inlayHint","ts":6877336.8310000002,"tid":24192,"dur":55.884999999776483,"args":{"Params":{"range":{"end":{"character":33,"line":240},"start":{"character":0,